{"version":3,"sources":["pages/CreateToken.js","config/contracts/LaunchPad.js","config/contracts/InvetmentInfo.js","config/apiBaseUrl.js","actions/types.js","components/Header.js","actions/authActions.js","components/InroContent.js","pages/Services.js","components/News.js","pages/Home.js","config/contracts/ERC20.js","pages/LaunchPad.js","config/contracts/PreSale.js","hooks/useCountdown.js","components/DateTimeDisplay.js","components/CountdownTimer.js","pages/EditPreSale.js","pages/PreSaleDetail.js","pages/Product.js","pages/Admin.js","components/Footer.js","App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["ModalWrapper","styled","div","Label","FormGroup","TextInput","input","Button","button","Flex","Error","span","CreateToken","open","closeModel","useState","setHash","Name","setName","Symbol","setSymbol","Decimal","setDecimal","NameError","SymbolError","DecimalError","TotalSupplyError","TotalSupply","settotalSupply","center","onClose","style","Index","classNames","modal","placeholder","type","value","onChange","e","target","LaunchPadContract","inputs","internalType","name","stateMutability","anonymous","indexed","outputs","components","InvestementInfo","api","TRIGGER_CONNECT","CONNECTED_SUCCESS","DISCONNECTED_SUCCESS","SAVE_TOKEN_ADDRESS","axios","defaults","headers","post","Main","Container","Nav","Row","Wrapper","FlexRight","LogoContent","Logo","img","NavBar","List","h1","connect","state","user","auth","dispatch","setConnected","data","types","setDisconnected","props","useSelector","preSaleTokenAddress","setOpen","navigate","useNavigate","isConnected","setIsConnected","handleDisconnect","handleConnect","MewConnectImport","default","infuraId","providerOptions","walletconnect","package","WalletConnectProvider","options","mewconnect","display","logo","description","WalletLink","appName","networkUrl","chainId","connector","_","walletLink","provider","makeWeb3Provider","enable","web3Modal","Web3Modal","network","cacheProvider","web3","ethers","providers","Web3Provider","signer","getSigner","getAddress","address","toLowerCase","doLogin","console","log","getChainId","launchPadContract","Contract","investmentInfoRead","toString","Boolean","chainError","on","accounts","error","alert","response","status","toast","success","fluid","boxShadow","src","onClick","Heading","Content","p","ChainList","a","CardHeading","Tag","Spacer","Linking","Link","lg","offset","tokens","length","to","CustomCol","Col","Card","Text","Services","News","Home","ERC20","bytes32","require","CardCol","media","xs","sm","md","active","FlexCenter","Stepper","ul","Item","li","StepperHead","StepperBody","StepperBodyLast","StepperFooter","Step","Line","Back","Next","InputText","select","InputDate","DateTimePicker","Alblur","shouldConnect","saveTokenAddressHandler","userAddress","tokenAddress","setTokenAddress","tokenAddressError","setTokenAddressError","setUnsoldTokensDumpAddressError","activeStep","setActiveStep","stepOne","setStepOne","stepTwo","setStepTwo","stepThree","setStepThree","stepFour","setStepFour","tokenPrice","settokenPrice","tokenPriceError","settokenPriceError","softCap","setSoftCap","softCapError","setSoftCapError","hardCap","setHardCap","hardCapError","setHardCapError","minimum","setMinimum","minimumError","setMinimumError","maximum","setMaximum","maximumError","setMaximumError","liquidity","setLiquidity","liquidityError","setLiquidityError","listingPrice","setListingPrice","Date","startTime","setStartTime","endTime","setEndTime","listingPriceError","setListingPriceError","liquidityLockup","setLiquidityLockup","liquidityLockupError","setLiquidityLockupError","lpTokensDurationInDays","setLpTokensDurationInDays","lpTokensDurationInDaysError","setLpTokensDurationInDaysError","setEndTimeError","startTimeError","setStartTimeError","endTimeLessError","setEndTimeLessError","liquidityLockupLessError","setLiquidityLockupLessError","saleTitle","setSaleTitle","telegramLink","setTelegramLink","unsoldTokensDumpAddress","setUnsoldTokensDumpAddress","discord","setDiscord","twitter","setTwitter","website","setWebsite","saleTitleError","setSaleTitleError","telegramLinkError","setTelegramLinkError","discordError","setDiscordError","twitterError","setTwitterError","websiteError","setWebsiteError","shortDiscordLink","setShortDiscordLink","shortTelegramLink","setShortTelegramLink","shortTwitterLink","setShortTwitterLink","shortWebsiteLink","setShortWebsiteLink","presalePrice","setPresalePriceError","reg_expression","reg_for_positive","toggle","index","scrollToStepFirst","setTimeout","scrollFirst","scrollToStepSecond","scrollSecond","scrollToStepThird","scrollThird","document","getElementById","scrollIntoView","behavior","block","inline","setApprove","erc20","approve","wait","createMyTokenPreSale","tokensTuple","whitelistedAddresses","tokenPriceInWei","utils","parseUnits","hardCapInWei","softCapInWei","maxInvestInWei","minInvestInWei","openTime","moment","unix","closeTime","infoTuple","listingPriceInWei","liquidityAddingTime","lpTokensLockDurationInDays","liquidityPercentageAllocation","socialTuple","ignoreLength","linkTelegram","linkDiscord","linkTwitter","linkWebsite","createPresale","events","args","contractCreationToken","token","then","catch","message","lgOffset","mdOffset","smOffset","xsOffset","id","trim","test","min","step","pattern","onBlur","_isValid","stepTwoValiation","socialValiation","PreSaleContract","useCountdown","targetDate","countDownDate","getTime","countDown","setCountDown","useEffect","interval","setInterval","clearInterval","getReturnValues","Math","floor","DateTimeDisplay","isDanger","className","ExpiredNotice","ShowCounter","days","hours","minutes","seconds","rel","CountdownTimer","ButtonContainer","Column","SecondButtonContainer","Flexed","MaxButton","Button1","ColCenter","Icon","LoadingPanelContent","LoadingPanel","CustomRow","preSaleViewToken","setHardCapInWei","setSoftCapInWei","setCloseTime","setOpneTime","setMaxInvestInWei","setMinInvetsInWei","twitterLink","setTwitterLink","discordLink","setDiscordLink","webisteLink","setWebsiteLink","investAmount","setInvestAmount","investerCount","setInvesterCount","totalInvestedAmount","setTotalInvestment","preSaleCreatorAddress","setPreSaleCreatorAddress","match","setMatch","investementPreSale","setInvestementPreSale","liqLockAddress","setLiqLockAddress","unsoldTokenAddress","setUnSoldTokenAddress","loading","setLoading","closingTime","setClosingTime","startingTime","setStartingTime","balance","setBalance","saleStartingTime","closingTimeDays","closingTimeHours","closingTimeMinutes","closingTimeSeconds","_investementPreSale","readLaunchpadInfo","getBalance","_balance","formatEther","totalCollectedWei","_tokenAddress","presaleCreatorAddress","LiqLockAddress","totalInvestorsCount","_totalInvestorsCount","startDate","format","endDate","_hardCapInWei","_softCapInWie","_maxInvestInWei","_minInvestInWei","_totalCollectedWei","telegramBytes","twitterBytes","discordBytes","websiteBytes","saleTitleBytes","_telegramLink","parseBytes32String","_twitterLink","_discordLink","_websiteLink","_saleTitle","investIn","invest","parseEther","investTx","includes","addLiquidityAndLockLPTokens","addLiquidityAndLockLPTokensTx","claimTokens","cancelAndTransferTokensToPresaleCreator","cancelAndTransferTokensToPresaleCreatorTx","collectFundsRaised","collectFundsRaisedTx","getRefund","getRefundTx","href","color","h3","width","editPreSale","isDeveloper","setIsDeveloper","setuniLiquidityAddingTime","liquidityDate","setLiquidityDate","editCloseTime","setEditCLoseTime","editLiqTime","setEditLiqTime","saleStartingTIme","i","uniLiquidityAddingTime","liquidityAddingDate","updateTokensTuple","liqAddingTime","editInfoPresale","editInfoPresaleDev","marginLeft","disabled","STabs","Tab","STabList","TabList","tabsRole","STab","STabPanel","TabContent","StatusBar","StatusButton","StatusSuccess","StatusFaild","NotFoundText","Product","activeTab","setActiveTab","setStatus","allProducts","setAllProducts","upComing","setUpComing","live","setLive","completed","setCompleted","setPreSaleViewToken","viewAllProjects","get","resetAllProducts","map","preValue","undefined","ButtonContent","Admin","devFeePercentage","setDevFeePercentage","devFeeInWei","setDevFeeInWie","presaleCount","setPreSaleCount","preSaleAddress","setPreSaleAddress","adminOwner","setAdminOwner","logGet","getMinDevFeeInWei","getDevFeePercentage","getPresalesCount","getPresaleAddress","owner","Box","FooterLink","Footer","App","path","element","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.8d0d28d2.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport 'react-responsive-modal/styles.css'\nimport {Modal} from 'react-responsive-modal'\nconst CreateToken = ({open, closeModel}) => {\n    const [, setHash] = useState(false)\n    const [Name, setName] = useState('')\n    const [Symbol, setSymbol] = useState('')\n    const [Decimal, setDecimal] = useState('')\n    const [NameError] = useState(true)\n    const [SymbolError] = useState(true)\n    const [DecimalError] = useState(true)\n    const [TotalSupplyError] = useState(true)\n    const [TotalSupply, settotalSupply] = useState('')\n    return (\n        <>\n            <Modal\n                open={open}\n                center\n                onClose={() => {\n                    setHash(false)\n                    closeModel()\n                }}\n                style={{Index: 2}}\n                classNames={{\n                    modal: 'createTokenModel'\n                }}>\n                <ModalWrapper>\n                    <h2>Create Token</h2>\n                    <div>\n                        <FormGroup>\n                            <Label>Name</Label>\n                            <TextInput placeholder=\"NAME\" type=\"text\" value={Name} onChange={(e) => setName(e.target.value)} />\n                            {NameError && <Error>Name is a required field</Error>}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Symbol</Label>\n                            <TextInput placeholder=\"SYMBOL\" type=\"text\" value={Symbol} onChange={(e) => setSymbol(e.target.value)} />\n                            {SymbolError && <Error>Symbol is always in UPPERCASE</Error>}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Decimal</Label>\n                            <TextInput placeholder=\"18\" type=\"text\" value={Decimal} onChange={(e) => setDecimal(e.target.value)} />\n                            {DecimalError && <Error>1-18(1e18=1BNB)</Error>}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Total Supply</Label>\n                            <TextInput placeholder=\"10000000000\" type=\"text\" value={TotalSupply} onChange={(e) => settotalSupply(e.target.value)} />\n                            {TotalSupplyError && <Error>Total Supply</Error>}\n                        </FormGroup>\n                        <Flex>\n                            <Button>CreateToken</Button>\n                        </Flex>\n                    </div>\n                </ModalWrapper>\n            </Modal>\n        </>\n    )\n}\n\nconst ModalWrapper = styled.div`\n    padding: 2rem;\n`\nconst Label = styled.div`\n    padding: 0;\n    color: #333;\n    font-size: 1rem;\n    font-weight: bold;\n    padding-bottom: 0.5rem;\n    margin: 0;\n`\nconst FormGroup = styled.div`\n    color: #333;\n    font-size: 1rem;\n    font-weight: bold;\n    align-items: center;\n    padding-bottom: 1rem;\n    margin: 0;\n`\nconst TextInput = styled.input`\n    width: 100%;\n    outline: none;\n    font-size: 1rem;\n    letter-spacing: 0.1rem;\n    text-align: left;\n    color: #333;\n    border: 0.1rem solid #eee;\n    background: white;\n    border-radius: 0.3rem;\n    padding: 0.5rem 0.5rem;\n`\nconst Button = styled.button`\n    color: black;\n    padding: 0.5rem;\n    background: #00bcd4;\n    color: white;\n    border: none;\n    border-radius: 0.3rem;\n`\nconst Flex = styled.div`\n    display: flex;\n    justify-content: center;\n`\nconst Error = styled.span`\n    color: #00bcd4;\n    font-size: 0.7rem;\n`\nexport default CreateToken\n","export const LaunchPadContract = {\n    id: '0x68796B5C8E897D62Cb232e7d59B517da2B07226a',\n    abi: [\n        {inputs: [{internalType: 'address', name: '_InfoAddress', type: 'address'}], stateMutability: 'nonpayable', type: 'constructor'},\n        {\n            anonymous: false,\n            inputs: [\n                {indexed: false, internalType: 'bytes32', name: 'title', type: 'bytes32'},\n                {indexed: false, internalType: 'uint256', name: 'Id', type: 'uint256'},\n                {indexed: false, internalType: 'address', name: 'presalecontractaddress', type: 'address'}\n            ],\n            name: 'PresaleCreated',\n            type: 'event'\n        },\n        {inputs: [], name: 'SSS', outputs: [{internalType: 'contract InvestmentsInfo', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {\n            inputs: [\n                {\n                    components: [\n                        {internalType: 'address', name: 'tokenAddress', type: 'address'},\n                        {internalType: 'address', name: 'unsoldTokensDumpAddress', type: 'address'},\n                        {internalType: 'address[]', name: 'whitelistedAddresses', type: 'address[]'},\n                        {internalType: 'uint256', name: 'tokenPriceInWei', type: 'uint256'},\n                        {internalType: 'uint256', name: 'hardCapInWei', type: 'uint256'},\n                        {internalType: 'uint256', name: 'softCapInWei', type: 'uint256'},\n                        {internalType: 'uint256', name: 'maxInvestInWei', type: 'uint256'},\n                        {internalType: 'uint256', name: 'minInvestInWei', type: 'uint256'},\n                        {internalType: 'uint256', name: 'openTime', type: 'uint256'},\n                        {internalType: 'uint256', name: 'closeTime', type: 'uint256'}\n                    ],\n                    internalType: 'struct InvestmentsFactory.PresaleInfo',\n                    name: '_info',\n                    type: 'tuple'\n                },\n                {\n                    components: [\n                        {internalType: 'uint256', name: 'listingPriceInWei', type: 'uint256'},\n                        {internalType: 'uint256', name: 'liquidityAddingTime', type: 'uint256'},\n                        {internalType: 'uint256', name: 'lpTokensLockDurationInDays', type: 'uint256'},\n                        {internalType: 'uint256', name: 'liquidityPercentageAllocation', type: 'uint256'}\n                    ],\n                    internalType: 'struct InvestmentsFactory.PresaleUniswapInfo',\n                    name: '_uniInfo',\n                    type: 'tuple'\n                },\n                {\n                    components: [\n                        {internalType: 'bytes32', name: 'saleTitle', type: 'bytes32'},\n                        {internalType: 'bytes32', name: 'linkTelegram', type: 'bytes32'},\n                        {internalType: 'bytes32', name: 'linkDiscord', type: 'bytes32'},\n                        {internalType: 'bytes32', name: 'linkTwitter', type: 'bytes32'},\n                        {internalType: 'bytes32', name: 'linkWebsite', type: 'bytes32'}\n                    ],\n                    internalType: 'struct InvestmentsFactory.PresaleStringInfo',\n                    name: '_stringInfo',\n                    type: 'tuple'\n                }\n            ],\n            name: 'createPresale',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        }\n    ]\n}\n","export const InvestementInfo = {\n    id: '0x45C52514993A30c8d53C0386248E8a702F7d0f99',\n    abi: [\n        {\n            anonymous: false,\n            inputs: [\n                {indexed: true, internalType: 'address', name: 'previousOwner', type: 'address'},\n                {indexed: true, internalType: 'address', name: 'newOwner', type: 'address'}\n            ],\n            name: 'OwnershipTransferred',\n            type: 'event'\n        },\n        {inputs: [{internalType: 'address', name: '_presale', type: 'address'}], name: 'addPresaleAddress', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [], name: 'getDevFeePercentage', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'getMinDevFeeInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [{internalType: 'uint256', name: 'Id', type: 'uint256'}], name: 'getPresaleAddress', outputs: [{internalType: 'address', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'getPresalesCount', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'owner', outputs: [{internalType: 'address', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [{internalType: 'uint256', name: '_devFeePercentage', type: 'uint256'}], name: 'setDevFeePercentage', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [{internalType: 'uint256', name: '_minDevFeeInWei', type: 'uint256'}], name: 'setMinDevFeeInWei', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [{internalType: 'address', name: 'newOwner', type: 'address'}], name: 'transferOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function'}\n    ]\n}\n","export const api = 'http://18.188.41.18:5000'\n","export const TRIGGER_CONNECT = 'TRIGGER_CONNECT'\nexport const CONNECTED_SUCCESS = 'CONNECTED_SUCCESS'\nexport const DISCONNECTED_SUCCESS = 'DISCONNECTED_SUCCESS'\nexport const META_MASK_ADDRESS = 'META_MASK_ADDRESS'\nexport const SAVE_TOKEN_ADDRESS = 'SAVE_TOKEN_ADDRESS'\n\n\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col} from 'styled-bootstrap-grid'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport WalletLink from 'walletlink'\nimport {ethers} from 'ethers'\nimport CreateToken from '../pages/CreateToken'\nimport {LaunchPadContract} from '../config/contracts/LaunchPad'\nimport {InvestementInfo} from '../config/contracts/InvetmentInfo'\nimport {connect} from 'react-redux'\nimport {bindActionCreators, compose} from 'redux'\nimport {api} from '../config/apiBaseUrl'\nimport {setConnected, setDisconnected} from '../actions/authActions'\nimport {toast} from 'react-toastify'\nimport {useNavigate} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nimport axios from 'axios'\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers.post['Accept'] = 'application/json'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nconst Header = (props) => {\n    let preSaleTokenAddress = useSelector((state) => state.auth.preSaleTokenAddress)\n    const [open, setOpen] = useState(false)\n    const navigate = useNavigate()\n\n    const [isConnected, setIsConnected] = useState(false)\n\n    const closeModel = () => {\n        setOpen(false)\n    }\n\n    const openModel = () => {\n        setOpen(true)\n    }\n\n    const handleDisconnect = async () => {\n        setIsConnected(false)\n        props.setDisconnected()\n    }\n\n    const handleConnect = async () => {\n        try {\n            const {default: MewConnectImport} = await import('@myetherwallet/mewconnect-web-client')\n            const infuraId = 'e7218ebfa4cd4b65bd3d4c5a508f03a8'\n            const providerOptions = {\n                walletconnect: {\n                    package: WalletConnectProvider,\n                    options: {\n                        infuraId\n                    }\n                },\n                mewconnect: {\n                    package: MewConnectImport,\n                    options: {\n                        infuraId\n                    }\n                },\n                'custom-coinbase': {\n                    display: {\n                        logo: '/images/coinbase_wallet.png',\n                        name: 'Coinbase',\n                        description: 'Scan with WalletLink to connect'\n                    },\n                    package: WalletLink,\n                    options: {\n                        appName: 'Launchpad',\n                        networkUrl: `https://mainnet.infura.io/v3/${infuraId}`,\n                        chainId: 1\n                    },\n                    connector: async (_, options) => {\n                        const {appName, networkUrl, chainId} = options\n                        const walletLink = new WalletLink({\n                            appName\n                        })\n                        const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n                        await provider.enable()\n                        return provider\n                    }\n                }\n            }\n            const web3Modal = new Web3Modal({\n                network: 'mainnet',\n                cacheProvider: true,\n                providerOptions\n            })\n\n            const web3 = await web3Modal.connect()\n            const provider = new ethers.providers.Web3Provider(web3)\n            const signer = provider.getSigner()\n            let address = await signer.getAddress()\n            address = address.toLowerCase()\n            const user = await doLogin(address)\n            console.log(user)\n            const chainId = await signer.getChainId()\n            if (user) {\n                const launchPadContract = new ethers.Contract(LaunchPadContract.id, LaunchPadContract.abi, signer)\n                console.log(signer)\n                const investmentInfoRead = new ethers.Contract(InvestementInfo.id, InvestementInfo.abi, signer)\n\n                if (chainId.toString() == '97') {\n                    const isConnected = Boolean(provider && signer)\n                    const chainError = false\n                    setIsConnected(isConnected)\n                    props.setConnected({\n                        isConnected: isConnected,\n                        chainError: false,\n                        user: user,\n                        signer: signer,\n                        address: address,\n                        launchPadContract: launchPadContract,\n                        investmentInfoRead: investmentInfoRead //its set for admin.. why?\n                    })\n\n                    web3.on('accountsChanged', (accounts) => {\n                        handleDisconnect()\n                    })\n\n                    web3.on('chainChanged', (chainId) => {\n                        handleDisconnect()\n                    })\n\n                    web3.on('disconnect', (error) => {\n                        handleDisconnect()\n                    })\n                } else {\n                    alert('Please connect to chain id 97')\n                    props.setConnected({\n                        isConnected: false,\n                        chainError: true\n                    })\n                }\n            } else {\n                alert('Please connect to chain id 97')\n                props.setConnected({\n                    isConnected: false,\n                    chainError: true\n                })\n            }\n        } catch (error) {\n            console.log('error', error)\n            props.setConnected({\n                isConnected: false,\n                chainError: true\n            })\n        }\n    }\n\n    const doLogin = async (address) => {\n        const response = await axios.post(`${api}/user/login`, {address: address})\n        if (response.data.status) {\n            toast.success('Wallet connected successfully')\n            return response.data\n        } else {\n            return false\n        }\n    }\n\n    return (\n        <>\n            <Main\n                fluid\n                styled={{\n                    boxShadow: '0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%)'\n                }}>\n                <Nav>\n                    <Wrapper>\n                        <LogoContent>\n                            <Logo\n                                src=\"/images/logo.png\"\n                                onClick={() => {\n                                    navigate('/')\n                                }}\n                            />\n                        </LogoContent>\n                    </Wrapper>\n                    <Col>\n                        <NavBar>\n                            <List></List>\n                        </NavBar>\n                    </Col>\n                    <FlexRight>\n                        {/* <Button onClick={() => openModel()}>Create Token</Button> */}\n                        <Button onClick={() => (!isConnected ? handleConnect() : handleDisconnect())}>{!isConnected ? 'Connect' : 'Disconnect'}</Button>\n                    </FlexRight>\n                </Nav>\n            </Main>\n            <CreateToken open={open} closeModel={closeModel} />\n        </>\n    )\n}\n\nconst Main = styled(Container)`\n    box-shadow: 0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%);\n    position: fixed;\n    background: white;\n    z-index: 2;\n`\n\nconst Nav = styled(Row)`\n    align-items: center;\n    height: 5rem;\n    padding: 0rem 3rem 0rem 3rem;\n`\n\nconst Wrapper = styled.div`\n    position: absolute;\n`\nconst FlexRight = styled(Wrapper)`\n    position: absolute;\n    right: 4%;\n`\nconst LogoContent = styled.div`\n    padding: 0rem;\n`\nconst Logo = styled.img`\n    width: 14rem;\n    padding: 0rem;\n    cursor: pointer;\n`\nconst NavBar = styled.div`\n    width: 100%;\n`\n\nconst List = styled.h1`\n    margin: 0rem;\n    text-align: center;\n`\nconst Button = styled.div`\n    display: inline-block;\n    padding: 0.5rem 1rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.3rem;\n    border: none;\n    font-size: 0.7rem;\n    text-align: center;\n    margin: 0rem 0.5rem;\n    cursor: pointer;\n    &:hover {\n        background: #05b5cc;\n    }\n`\n\nconst mapStateToProps = (state) => {\n    return {\n        // shouldConnect: state.auth.shouldConnect,\n        // isConnected: state.auth.isConnected,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setConnected: (data) => dispatch(setConnected(data)),\n    setDisconnected: (data) => dispatch(setDisconnected(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import * as types from './types'\n\nexport const triggerConnect = () => {\n    return {\n        type: types.TRIGGER_CONNECT\n    }\n}\n\nexport const setConnected = (payload) => {\n    return {\n        type: types.CONNECTED_SUCCESS,\n        value: payload\n    }\n}\n\nexport const setDisconnected = () => {\n    return {\n        type: types.DISCONNECTED_SUCCESS\n    }\n}\nexport const saveTokenAddress= (payload) => {\n    return {\n        type: types.SAVE_TOKEN_ADDRESS,\n        value: payload\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col} from 'styled-bootstrap-grid'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nconst IntroContent = ({user}) => {\n    return (\n        <Wrapper>\n            <Spacer />\n            <Row>\n                <Col lg={8} offset={2}>\n                    <Heading>The Launchpad Protocol for Everyone!</Heading>\n                    <Content>LaunchPad helps everyone to create their own tokens and token sales in few seconds. Tokens created on LaunchPad will be verified and published on explorer websites.</Content>\n                </Col>\n                <Col lg={8} offset={2}>\n                    <Flex>\n                        {user?.tokens?.length > 0 ? (\n                            <Linking to=\"/viewLaunchPad\">\n                                <Button>View your LaunchPad</Button>\n                            </Linking>\n                        ) : (\n                            <Linking to=\"/createLaunchPad\">\n                                <Button>Create your LaunchPad</Button>\n                            </Linking>\n                        )}\n                        <Linking to=\"/viewAllLaunchPad\">\n                            <Button>Checkout Projects</Button>\n                        </Linking>\n                    </Flex>\n                </Col>\n                <Col lg={8} offset={2}>\n                    <Content>LaunchPad helps everyone to create their own tokens and token sales in few seconds. Tokens created on LaunchPad will be verified and published on explorer websites.</Content>\n                </Col>\n            </Row>\n            <Spacer />\n            <Row>\n                <Col>\n                    <Heading>Available Chains</Heading>\n                    <List>\n                        <ChainList>\n                            <CardHeading>BSC</CardHeading>\n                        </ChainList>\n                        <ChainList>\n                            <CardHeading>ERC</CardHeading>\n                            <br />\n                            <Tag>Comming soon</Tag>\n                        </ChainList>\n                        <ChainList>\n                            <CardHeading>POLYGON</CardHeading>\n                            <br />\n                            <Tag>Comming soon</Tag>\n                        </ChainList>\n                        <ChainList>\n                            <CardHeading>FANTOM</CardHeading>\n                        </ChainList>\n                    </List>\n                </Col>\n            </Row>\n            <Spacer />\n        </Wrapper>\n    )\n}\nconst Wrapper = styled(Container)`\n    padding-top: 5rem;\n`\n\nconst Heading = styled.h1`\n    text-align: center;\n`\nconst Content = styled.p`\n    font-size: 1.2rem;\n    line-height: 1.5;\n    text-align: center;\n`\nconst Flex = styled.div`\n    text-align: center;\n    margin: 1rem 0rem;\n`\nconst List = styled.div`\n    display: flex;\n    margin: 2rem 0rem;\n    justify-content: center;\n`\nconst ChainList = styled.div`\n    text-align: center;\n    position: relative;\n    padding: 2rem;\n    background: white;\n    color: black;\n    border-radius: 0.2rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    width: 11rem;\n    height: 3rem;\n    box-shadow: 0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%);\n`\nconst Button = styled.a`\n    text-decoration: none;\n    padding: 0.8rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    text-decoration: none;\n    &:hover {\n        background: #05b5cc;\n    }\n`\nconst CardHeading = styled.div`\n    font-weight: bold;\n    font-size: 1.3rem;\n`\n\nconst Tag = styled.div`\n    position: absolute;\n    font-size: 0.9rem;\n    color: #00bcd4;\n    bottom: 1rem;\n    right: 0;\n    left: 0;\n`\nconst Spacer = styled.div`\n    height: 3rem;\n`\n\nconst Linking = styled(Link)`\n    text-decoration: none;\n`\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user\n    }\n}\nexport default connect(mapStateToProps, null)(IntroContent)\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col} from 'styled-bootstrap-grid'\n\nconst Services = () => {\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Heading>Services</Heading>\n                </Col>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>LaunchPad</CardHeading>\n                            <p>The portal to help you easily update content for your launchpad.</p>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>Liquidity Locker</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>Token Mint</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>NFT Market Place</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>Swap</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>P2E Games</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n            </Row>\n            <Spacer />\n        </Container>\n    )\n}\nconst Heading = styled.h1`\n    text-align: center;\n`\n\nconst CustomCol = styled(Col)`\n    padding: 0rem;\n`\nconst List = styled.div`\n    display: flex;\n    margin: 1rem 0rem;\n    justify-content: center;\n`\nconst Card = styled.div`\n    text-align: center;\n    position: relative;\n    padding: 2rem;\n    background: white;\n    color: black;\n    border-radius: 0.2rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    width: 100%;\n    box-shadow: 0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%);\n`\n\nconst CardHeading = styled.div`\n    font-weight: bold;\n    font-size: 1.3rem;\n`\nconst Text = styled.p``\nconst Spacer = styled.div`\n    height: 3rem;\n`\nexport default Services\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col} from 'styled-bootstrap-grid'\n\nconst News = () => {\n    return (\n        <Container>\n            <Spacer />\n            <Row>\n                <Col>\n                    <Heading>News & Announcement</Heading>\n                </Col>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>News</CardHeading>\n                            <p>The portal to help you easily update content for your launchpad.</p>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>News</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>News</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>News</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>News</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n                <CustomCol lg={4}>\n                    <List>\n                        <Card>\n                            <CardHeading>News</CardHeading>\n                            <Text>The portal to help you easily update content for your launchpad.</Text>\n                        </Card>\n                    </List>\n                </CustomCol>\n            </Row>\n            <Spacer />\n        </Container>\n    )\n}\nconst Heading = styled.h1`\n    text-align: center;\n`\n\nconst CustomCol = styled(Col)`\n    padding: 0rem;\n`\nconst List = styled.div`\n    display: flex;\n    margin: 1rem 0rem;\n    justify-content: center;\n`\nconst Card = styled.div`\n    text-align: center;\n    position: relative;\n    padding: 2rem;\n    background: white;\n    color: black;\n    border-radius: 0.2rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    width: 100%;\n    box-shadow: 0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%);\n`\n\nconst CardHeading = styled.div`\n    font-weight: bold;\n    font-size: 1.3rem;\n`\nconst Text = styled.p``\nconst Spacer = styled.div`\n    height: 3rem;\n`\nexport default News\n","import IntroContent from '../components/InroContent'\nimport Services from '../pages/Services'\nimport News from '../components/News'\n\nfunction Home() {\n    return (\n        <>\n            <IntroContent />\n            <Services />\n            <News />\n        </>\n    )\n}\n\nexport default Home\n","export const ERC20 = {\n    id: '',\n    abi: [\n        {\n            inputs: [\n                {\n                    internalType: 'string',\n                    name: 'name_',\n                    type: 'string'\n                },\n                {\n                    internalType: 'string',\n                    name: 'symbol_',\n                    type: 'string'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'constructor'\n        },\n        {\n            anonymous: false,\n            inputs: [\n                {\n                    indexed: true,\n                    internalType: 'address',\n                    name: 'owner',\n                    type: 'address'\n                },\n                {\n                    indexed: true,\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                },\n                {\n                    indexed: false,\n                    internalType: 'uint256',\n                    name: 'value',\n                    type: 'uint256'\n                }\n            ],\n            name: 'Approval',\n            type: 'event'\n        },\n        {\n            anonymous: false,\n            inputs: [\n                {\n                    indexed: true,\n                    internalType: 'address',\n                    name: 'from',\n                    type: 'address'\n                },\n                {\n                    indexed: true,\n                    internalType: 'address',\n                    name: 'to',\n                    type: 'address'\n                },\n                {\n                    indexed: false,\n                    internalType: 'uint256',\n                    name: 'value',\n                    type: 'uint256'\n                }\n            ],\n            name: 'Transfer',\n            type: 'event'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'owner',\n                    type: 'address'\n                },\n                {\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                }\n            ],\n            name: 'allowance',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'amount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'approve',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'account',\n                    type: 'address'\n                }\n            ],\n            name: 'balanceOf',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: 'decimals',\n            outputs: [\n                {\n                    internalType: 'uint8',\n                    name: '',\n                    type: 'uint8'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'subtractedValue',\n                    type: 'uint256'\n                }\n            ],\n            name: 'decreaseAllowance',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'spender',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'addedValue',\n                    type: 'uint256'\n                }\n            ],\n            name: 'increaseAllowance',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: 'name',\n            outputs: [\n                {\n                    internalType: 'string',\n                    name: '',\n                    type: 'string'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: 'symbol',\n            outputs: [\n                {\n                    internalType: 'string',\n                    name: '',\n                    type: 'string'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [],\n            name: 'totalSupply',\n            outputs: [\n                {\n                    internalType: 'uint256',\n                    name: '',\n                    type: 'uint256'\n                }\n            ],\n            stateMutability: 'view',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'to',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'amount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'transfer',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {\n                    internalType: 'address',\n                    name: 'from',\n                    type: 'address'\n                },\n                {\n                    internalType: 'address',\n                    name: 'to',\n                    type: 'address'\n                },\n                {\n                    internalType: 'uint256',\n                    name: 'amount',\n                    type: 'uint256'\n                }\n            ],\n            name: 'transferFrom',\n            outputs: [\n                {\n                    internalType: 'bool',\n                    name: '',\n                    type: 'bool'\n                }\n            ],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        }\n    ]\n}\n","import React, {useState} from 'react'\nimport web3 from 'web3'\nimport styled from 'styled-components'\nimport {Container, Row, Col, media} from 'styled-bootstrap-grid'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport DateTimePicker from 'react-datetime-picker'\nimport {ethers} from 'ethers'\nimport moment from 'moment'\nimport {useSelector} from 'react-redux'\nimport {connect} from 'react-redux'\nimport {saveTokenAddress} from '../actions/authActions'\nconst bytes32 = require('bytes32')\nimport {toast} from 'react-toastify'\nimport axios from 'axios'\nimport {useNavigate} from 'react-router-dom'\nimport {LaunchPadContract} from '../config/contracts/LaunchPad'\nimport {ERC20} from '../config/contracts/ERC20'\n// var shortUrl = require('node-url-shortener')\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers.post['Accept'] = 'application/json'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nimport {api} from '../config/apiBaseUrl'\n\nconst LaunchPad = ({saveTokenAddressHandler}) => {\n    const isConnected = useSelector((state) => state.auth.isConnected)\n    let userAddress = useSelector((state) => state.auth.address)\n    let signer = useSelector((state) => state.auth.signer)\n    const launchPadContract = useSelector((state) => state.auth.launchPadContract)\n    const [tokenAddress, setTokenAddress] = useState('')\n    const [tokenAddressError, setTokenAddressError] = useState('false')\n    const [unsoldTokensDumpAddressError, setUnsoldTokensDumpAddressError] = useState('false')\n    const [activeStep, setActiveStep] = useState(0)\n    const [stepOne, setStepOne] = useState(false)\n    const [stepTwo, setStepTwo] = useState(false)\n    const [stepThree, setStepThree] = useState(false)\n    const [stepFour, setStepFour] = useState(false)\n    const [tokenPrice, settokenPrice] = useState('0.1')\n    const [tokenPriceError, settokenPriceError] = useState(false)\n    const [softCap, setSoftCap] = useState('0.5')\n    const [softCapError, setSoftCapError] = useState(false)\n    const [hardCap, setHardCap] = useState('2.0')\n    const [hardCapError, setHardCapError] = useState(false)\n    const [minimum, setMinimum] = useState('0.1')\n    const [minimumError, setMinimumError] = useState(false)\n    const [maximum, setMaximum] = useState('0.5')\n    const [maximumError, setMaximumError] = useState(false)\n    const [liquidity, setLiquidity] = useState('99')\n    const [liquidityError, setLiquidityError] = useState(false)\n    const [listingPrice, setListingPrice] = useState('0.11')\n    const [startTime, setStartTime] = useState(new Date())\n    const [endTime, setEndTime] = useState(new Date())\n    const [listingPriceError, setListingPriceError] = useState(false)\n    const [liquidityLockup, setLiquidityLockup] = useState(new Date())\n    const [liquidityLockupError, setLiquidityLockupError] = useState(false)\n    const [lpTokensDurationInDays, setLpTokensDurationInDays] = useState('10')\n    const [lpTokensDurationInDaysError, setLpTokensDurationInDaysError] = useState(false)\n    const [endTimeError, setEndTimeError] = useState(false)\n    const [startTimeError, setStartTimeError] = useState(false)\n    const [endTimeLessError, setEndTimeLessError] = useState(false)\n    const [liquidityLockupLessError, setLiquidityLockupLessError] = useState(false)\n    const [saleTitle, setSaleTitle] = useState('')\n    const [telegramLink, setTelegramLink] = useState('')\n    const [totalInvestes, setTotalInvesters] = useState()\n    const [unsoldTokensDumpAddress, setUnsoldTokensDumpAddress] = useState()\n    const [discord, setDiscord] = useState('')\n    const [twitter, setTwitter] = useState('')\n    const [website, setWebsite] = useState('')\n    const [saleTitleError, setSaleTitleError] = useState(false)\n    const [telegramLinkError, setTelegramLinkError] = useState(false)\n    const [discordError, setDiscordError] = useState(false)\n    const [twitterError, setTwitterError] = useState(false)\n    const [websiteError, setWebsiteError] = useState(false)\n    const [shortDiscordLink, setShortDiscordLink] = useState('')\n    const [shortTelegramLink, setShortTelegramLink] = useState('')\n    const [shortTwitterLink, setShortTwitterLink] = useState('')\n    const [shortWebsiteLink, setShortWebsiteLink] = useState('')\n    const [whiteList, setWhiteList] = useState(['0x108BC24F725B3AE247704926dA097349171ef059', '0x108BC24F725B3AE247704926dA097349171ef059'])\n    const [name, setName] = useState('')\n    const [presalePrice, setPresalePrice] = useState('')\n    const [presalePriceError, setPresalePriceError] = useState(false)\n    const navigate = useNavigate()\n\n    const reg_expression = /^(0x)?[0-9a-f]{40}$/\n    const reg_for_positive = /^[+]?\\d*(?:[.,]\\d*)?$/\n\n    const checktokenPrice = () => {\n        if (tokenPrice.trim() === '') {\n            settokenPriceError(true)\n        }\n    }\n\n    const checkpresalePrice = () => {\n        if (presalePrice.trim() === '') {\n            setPresalePriceError(true)\n        } else {\n            settokenPriceError(false)\n        }\n    }\n\n    const checksoftCap = () => {\n        if (softCap.trim() === '') {\n            setSoftCapError(true)\n        } else {\n            setSoftCapError(false)\n        }\n    }\n\n    const checkhardCap = () => {\n        if (hardCap.trim() === '') {\n            setHardCapError(true)\n        } else {\n            setHardCapError(false)\n        }\n    }\n\n    const checkminimum = () => {\n        if (minimum.trim() === '') {\n            setMinimumError(true)\n        } else {\n            setMinimumError(false)\n        }\n    }\n\n    const checkmaximum = () => {\n        if (maximum.trim() === '') {\n            setMaximumError(true)\n        } else {\n            setMaximumError(false)\n        }\n    }\n\n    const checkliquidity = () => {\n        if (liquidity.trim() === '') {\n            setLiquidityError(true)\n        } else {\n            setLiquidityError(false)\n        }\n    }\n\n    const checklpTokensDurationInDays = () => {\n        if (liquidity.trim() === '') {\n            setLpTokensDurationInDaysError(true)\n        } else {\n            setLpTokensDurationInDaysError(false)\n        }\n    }\n\n    const checklistingPrice = () => {\n        if (listingPrice.trim() === '') {\n            setListingPriceError(true)\n        } else {\n            setListingPriceError(false)\n        }\n    }\n\n    const checkliquidityLockup = () => {\n        if (liquidityLockup === '') {\n            setLiquidityLockupError(true)\n        } else {\n            setLiquidityLockupError(false)\n        }\n    }\n\n    const checkstartTime = () => {\n        if (startTime === '') {\n            setStartTimeError(true)\n        } else {\n            setStartTimeError(false)\n        }\n    }\n\n    const toggle = (index) => {\n        if (index === 1) {\n            stepOne === false ? setStepOne(true) : setStepOne(false)\n        } else {\n            setStepOne(false)\n        }\n        if (index === 2) {\n            stepTwo === false ? setStepTwo(true) : setStepTwo(false)\n        } else {\n            setStepTwo(false)\n        }\n        if (index === 3) {\n            stepThree === false ? setStepThree(true) : setStepThree(false)\n        } else {\n            setStepThree(false)\n        }\n        if (index === 4) {\n            stepFour === false ? setStepFour(true) : setStepFour(false)\n        } else {\n            setStepFour(false)\n        }\n    }\n\n    const scrollToStepFirst = () => {\n        setTimeout(scrollFirst, 100)\n    }\n\n    const scrollToStepSecond = () => {\n        setTimeout(scrollSecond, 100)\n    }\n\n    const scrollToStepThird = () => {\n        setTimeout(scrollThird, 100)\n    }\n\n    const scrollFirst = () => {\n        document.getElementById('firstStep').scrollIntoView({behavior: 'smooth', block: 'center', inline: 'start'})\n    }\n\n    const scrollSecond = () => {\n        document.getElementById('secondStep').scrollIntoView({behavior: 'smooth', block: 'center', inline: 'start'})\n    }\n\n    const scrollThird = () => {\n        document.getElementById('thirdStep').scrollIntoView({behavior: 'smooth', block: 'center', inline: 'start'})\n    }\n\n    const stepTwoValiation = () => {\n        let _isValid = true\n\n        if (tokenPrice.trim() == '') {\n            _isValid = false\n            settokenPriceError(true)\n        } else {\n            settokenPriceError(false)\n        }\n        if (softCap.trim() == '') {\n            _isValid = false\n            setSoftCapError(true)\n        } else {\n            setSoftCapError(false)\n        }\n        if (hardCap.trim() == '') {\n            _isValid = false\n            setHardCapError(true)\n        } else {\n            setHardCapError(false)\n        }\n        if (minimum.trim() == '') {\n            _isValid = false\n            setMinimumError(true)\n        } else {\n            setMinimumError(false)\n        }\n        if (maximum.trim() == '') {\n            _isValid = false\n            setMaximumError(true)\n        } else {\n            setMaximumError(false)\n        }\n        if (liquidity.trim() == '') {\n            _isValid = false\n            setLiquidityError(true)\n        } else {\n            setLiquidityError(false)\n        }\n        if (listingPrice.trim() == '') {\n            _isValid = false\n            setListingPriceError(true)\n        } else {\n            setListingPriceError(false)\n        }\n        if (liquidityLockup == '') {\n            _isValid = false\n            setLiquidityLockupError(true)\n        } else {\n            setLiquidityLockupError(false)\n        }\n        if (lpTokensDurationInDays.trim() == '') {\n            _isValid = false\n            setLpTokensDurationInDaysError(true)\n        } else {\n            setLpTokensDurationInDaysError(false)\n        }\n        if (startTime == '') {\n            _isValid = false\n            setStartTimeError(true)\n        } else {\n            setStartTimeError(false)\n        }\n        if (endTime == '') {\n            _isValid = false\n            setEndTimeError(true)\n        } else {\n            setEndTimeError(false)\n        }\n        if (endTime <= startTime) {\n            _isValid = false\n            setEndTimeLessError(true)\n        } else {\n            setEndTimeLessError(false)\n        }\n        if (liquidityLockup <= endTime) {\n            _isValid = false\n            setLiquidityLockupLessError(true)\n        } else {\n            setLiquidityLockupLessError(false)\n        }\n\n        return _isValid\n    }\n\n    const socialValiation = () => {\n        let _isValid = true\n\n        if (saleTitle.trim() == '') {\n            _isValid = false\n            setSaleTitleError(true)\n        } else {\n            setSaleTitleError(false)\n        }\n        if (telegramLink.trim() == '') {\n            _isValid = false\n            setTelegramLinkError(true)\n        } else {\n            setTelegramLinkError(false)\n        }\n        if (discord.trim() == '') {\n            _isValid = false\n            setDiscordError(true)\n        } else {\n            setDiscordError(false)\n        }\n        if (twitter.trim() == '') {\n            _isValid = false\n            setTwitterError(true)\n        } else {\n            setTwitterError(false)\n        }\n        if (website.trim() == '') {\n            _isValid = false\n            setWebsiteError(true)\n        } else {\n            setWebsiteError(false)\n        }\n        return _isValid\n    }\n\n    const setApprove = async () => {\n        try {\n            const erc20 = new ethers.Contract(tokenAddress, ERC20.abi, signer)\n            if (erc20) {\n                const approve = await erc20.approve(LaunchPadContract.id, '10000000000000000000000000000')\n                if (approve) {\n                    await approve.wait()\n                } else {\n                    toast.error('Please approve tokens.')\n                }\n            } else {\n                toast.error('Something went wrong. Please try again later.')\n            }\n        } catch (error) {\n            toast.error('Please enter valid token address.')\n        }\n    }\n\n    const createMyTokenPreSale = async () => {\n        if (!launchPadContract) {\n            toast.error('Please connect to chain Id 97')\n        }\n\n        let tokensTuple = {\n            tokenAddress: tokenAddress,\n            unsoldTokensDumpAddress: unsoldTokensDumpAddress,\n            whitelistedAddresses: [],\n            tokenPriceInWei: ethers.utils.parseUnits(tokenPrice, 18).toString(),\n            hardCapInWei: ethers.utils.parseUnits(hardCap, 18).toString(),\n            softCapInWei: ethers.utils.parseUnits(softCap, 18).toString(),\n            maxInvestInWei: ethers.utils.parseUnits(maximum, 18).toString(),\n            minInvestInWei: ethers.utils.parseUnits(minimum, 18).toString(),\n            openTime: moment(startTime).unix().toString(),\n            closeTime: moment(endTime).unix().toString()\n        }\n        let infoTuple = {\n            listingPriceInWei: ethers.utils.parseUnits(listingPrice, 18).toString(),\n            liquidityAddingTime: moment(liquidityLockup).unix().toString(),\n            lpTokensLockDurationInDays: lpTokensDurationInDays,\n            liquidityPercentageAllocation: liquidity\n        }\n\n        let socialTuple = {\n            saleTitle: bytes32({input: saleTitle, ignoreLength: true}).toLowerCase(),\n            linkTelegram: bytes32({input: shortTelegramLink}).toLowerCase(),\n            linkDiscord: bytes32({input: shortDiscordLink}).toLowerCase(),\n            linkTwitter: bytes32({input: shortTwitterLink}).toLowerCase(),\n            linkWebsite: bytes32({input: shortWebsiteLink}).toLowerCase()\n        }\n        try {\n            const createPresale = await launchPadContract.createPresale(tokensTuple, infoTuple, socialTuple)\n\n            const response = await createPresale.wait()\n            console.log(response.events[2].args[2])\n            const contractCreationToken = response.events[2].args[2] //response.events[0].args[3]\n\n            if (contractCreationToken) {\n                axios\n                    .post(`${api}/pre_sale/add`, {\n                        address: userAddress,\n                        token: contractCreationToken,\n                        softCap: tokensTuple.softCapInWei,\n                        endTime: tokensTuple.closeTime,\n                        startTime: tokensTuple.openTime,\n                        saleTitle: socialTuple.saleTitle\n                    })\n                    .then((response) => {\n                        if (response.data.status) {\n                            toast.success('Presale created successfully')\n                            setStepFour(false)\n                            setActiveStep(0)\n                            navigate('/')\n                        }\n                    })\n                    .catch(function (error) {})\n            } else {\n                alert('contract failed')\n            }\n        } catch (e) {\n            alert(e.message)\n        }\n    }\n\n    return (\n        <Container>\n            <Spacer />\n            <Spacer />\n            <Row>\n                <Col>\n                    <Heading>Create Launchpad</Heading>\n                </Col>\n                <CardCol lg={3} md={3} sm={3} xs={3}>\n                    <List>\n                        <Card active={activeStep > 0 || activeStep > 4}>\n                            <CardHeading>Add Token Address</CardHeading>\n                        </Card>\n                    </List>\n                </CardCol>\n                <CardCol lg={3} md={3} sm={3} xs={3}>\n                    <List>\n                        <Card active={activeStep > 1 || activeStep > 4}>\n                            <CardHeading>Defi Launchpad Info</CardHeading>\n                        </Card>\n                    </List>\n                </CardCol>\n                <CardCol lg={3} md={3} sm={3} xs={3}>\n                    <List>\n                        <Card active={activeStep > 2 || activeStep > 4}>\n                            <CardHeading>Add Additional Info </CardHeading>\n                        </Card>\n                    </List>\n                </CardCol>\n                <CardCol lg={3} md={3} sm={3} xs={3}>\n                    <List>\n                        <Card active={activeStep > 3 || activeStep > 4}>\n                            <CardHeading>Finish and Review your information</CardHeading>\n                        </Card>\n                    </List>\n                </CardCol>\n            </Row>\n            <Spacer />\n            <Row>\n                <FlexCenter>\n                    <Button\n                        onClick={() => {\n                            if (isConnected) {\n                                setStepOne(true)\n                                scrollToStepFirst()\n                                setActiveStep(1)\n                            } else {\n                                toast.error('Please connect your wallet first', {})\n                            }\n                        }}>\n                        Begin\n                    </Button>\n                </FlexCenter>\n            </Row>\n            <Spacer />\n            <Row>\n                <Col lg={8} lgOffset={2} mdOffset={2} smOffset={0} xsOffset={0}>\n                    <Stepper>\n                        <Item id=\"firstStep\">\n                            <StepperHead onClick={() => toggle(1)}>\n                                <Step>1</Step>Add Token Address\n                            </StepperHead>\n                            {stepOne && (\n                                <StepperBody>\n                                    <Container>\n                                        <Row>\n                                            <Col>\n                                                <Label>Token Address</Label>\n                                                <InputText\n                                                    value={tokenAddress}\n                                                    onChange={(e) => {\n                                                        setTokenAddress(e.target.value.toLowerCase())\n                                                    }}\n                                                />\n                                                {tokenAddressError == true && tokenAddress.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {tokenAddress && reg_expression.test(tokenAddress) === false && <Alblur>Please Enter a valid token address</Alblur>}\n                                                <Label>Address for Unsold Tokens (Tokens to be dumpped)</Label>\n                                                <InputText\n                                                    value={unsoldTokensDumpAddress}\n                                                    onChange={(e) => {\n                                                        setUnsoldTokensDumpAddress(e.target.value.toLowerCase())\n                                                    }}\n                                                />\n\n                                                <Text>Create Pool Fee: 1 BNB or 1%</Text>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                    {activeStep > 0 && (\n                                        <StepperFooter>\n                                            <Next\n                                                onClick={() => {\n                                                    if (tokenAddress.trim() != '' && reg_expression.test(tokenAddress)) {\n                                                        setTokenAddressError(false)\n                                                        setUnsoldTokensDumpAddressError(false)\n                                                        setStepOne(false)\n                                                        setStepTwo(true)\n                                                        scrollToStepSecond()\n                                                        setActiveStep(2)\n                                                        setApprove()\n                                                        saveTokenAddressHandler(tokenAddress)\n                                                    } else {\n                                                        setTokenAddressError(true)\n                                                        setUnsoldTokensDumpAddressError(true)\n                                                    }\n                                                }}>\n                                                Next\n                                            </Next>\n                                        </StepperFooter>\n                                    )}\n                                </StepperBody>\n                            )}\n                        </Item>\n                        <Line></Line>\n                        <Item id=\"secondStep\">\n                            <StepperHead onClick={() => toggle(2)}>\n                                <Step>2</Step>Defi Launchpad Info\n                            </StepperHead>\n                            {stepTwo && (\n                                <StepperBody>\n                                    <Container>\n                                        <Row>\n                                            <CustomCol lg={12}>\n                                                <Label>Token Price (BNB)</Label>\n                                                <InputText\n                                                    value={tokenPrice}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        settokenPrice(e.target.value)\n                                                    }}\n                                                    onBlur={checkpresalePrice}\n                                                />\n                                                {tokenPriceError == true && tokenPrice.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {tokenPrice && reg_for_positive.test(tokenPrice) === false && <Alblur>Token Price must be Positive Number</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Softcap (BNB)</Label>\n                                                <InputText\n                                                    value={softCap}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        setSoftCap(e.target.value)\n                                                    }}\n                                                    onBlur={checksoftCap}\n                                                />\n                                                {softCapError == true && softCap.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {softCap && reg_for_positive.test(softCap) == false && <Alblur>SoftCap must be Positive Number</Alblur>}\n                                                {/* <Text>Softcap must be {'>'}= 50% of Hardcap!</Text> */}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Hardcap (BNB)</Label>\n                                                <InputText\n                                                    value={hardCap}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        setHardCap(e.target.value)\n                                                    }}\n                                                    onBlur={checkhardCap}\n                                                />\n                                                {hardCapError == true && hardCap.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {hardCap && reg_for_positive.test(hardCap) == false && <Alblur>HardCap must be Positive Number</Alblur>}\n                                                {hardCap <= softCap && <Alblur>Hardcap must be {'>'}= 50% of Softcap!</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Minimum Purchase/Buyer (BNB)</Label>\n                                                <InputText\n                                                    value={minimum}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        setMinimum(e.target.value)\n                                                    }}\n                                                    onBlur={checkminimum}\n                                                />\n                                                {minimumError == true && minimum.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {minimum && reg_for_positive.test(minimum) == false && <Alblur>Minimum must be Positive Number</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Maximum Purchase/Buyer (BNB)</Label>\n                                                <InputText\n                                                    value={maximum}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        setMaximum(e.target.value)\n                                                    }}\n                                                    onBlur={checkmaximum}\n                                                />\n                                                {maximumError == true && maximum.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {maximum && reg_for_positive.test(maximum) == false && <Alblur>Maximum must be Positive Number</Alblur>}\n                                            </CustomCol>\n                                            {/* <CustomCol lg={6}></CustomCol> */}\n                                            <CustomCol lg={6}>\n                                                <Label>{name + 'Liquidity (%)'} </Label>\n                                                <InputText\n                                                    value={liquidity}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        setLiquidity(e.target.value)\n                                                    }}\n                                                    onBlur={checkliquidity}\n                                                />\n                                                {liquidityError == true && liquidity.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {liquidityError && <Alblur>Liquidity must be{'>'}50%</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>{name + 'Listing Price (BNB)'}</Label>\n                                                <InputText\n                                                    value={listingPrice}\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    step=\"1\"\n                                                    pattern=\"\\d+\"\n                                                    onChange={(e) => {\n                                                        setListingPrice(e.target.value)\n                                                    }}\n                                                    onBlur={checklistingPrice}\n                                                />\n                                                {listingPriceError == true && listingPrice.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {listingPriceError && <Alblur>Listing Price must be Positive Number</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={12}>\n                                                <Text>Enter the percentage of raised funds that should be allocated to Liquidity on (Min 51%, Max 100%)</Text>\n                                                <Text>If I spend 1 BNB on how many tokens will I receive? Usually this amount is lower than presale rate to allow for a higher listing price on</Text>\n                                            </CustomCol>\n                                            <CustomCol lg={12}>\n                                                <Label>Select start time & end time (LocalTime)</Label>\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Start Time (LocalTime)</Label>\n\n                                                <InputDate onChange={setStartTime} value={startTime} />\n\n                                                {startTimeError && <Alblur>Start Time need to be Before End Time</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>End Time (LocalTime)</Label>\n                                                <InputDate onChange={setEndTime} value={endTime} />\n                                                <br />\n                                                {endTimeLessError == true && <Alblur>End Time need to be greater then Start Time</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Liquidity lockup (Second)</Label>\n                                                <div>\n                                                    <InputDate value={liquidityLockup} onChange={setLiquidityLockup} onBlur={checkliquidityLockup} />\n                                                    <br />\n                                                    {liquidityLockupLessError == true && <Alblur>Liquidity lockup need to be greater then End Time</Alblur>}\n                                                </div>\n                                                {liquidityLockupError && <Alblur>LockUp Time must be {'>'} 5 Seconds</Alblur>}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Liquidity lockup (Days)</Label>\n                                                <InputText\n                                                    value={lpTokensDurationInDays}\n                                                    onChange={(e) => {\n                                                        setLpTokensDurationInDays(e.target.value)\n                                                    }}\n                                                    onBlur={checklpTokensDurationInDays}\n                                                />\n                                                {lpTokensDurationInDaysError == true && lpTokensDurationInDays.trim() == '' ? <Alblur>Please fill this field</Alblur> : ''}\n                                                {lpTokensDurationInDaysError && <Alblur>Lock lpToken Duration must be {'>'} endTime</Alblur>}\n                                            </CustomCol>\n                                        </Row>\n                                    </Container>\n                                    {activeStep > 1 && (\n                                        <StepperFooter>\n                                            <Back\n                                                onClick={() => {\n                                                    scrollToStepFirst()\n                                                    setStepOne(true)\n                                                    setStepTwo(false)\n                                                    setActiveStep(1)\n                                                }}>\n                                                Back\n                                            </Back>\n                                            <Next\n                                                onClick={() => {\n                                                    if (stepTwoValiation()) {\n                                                        setStepTwo(false)\n                                                        setStepThree(true)\n                                                        scrollToStepThird()\n                                                        setActiveStep(3)\n                                                    }\n                                                }}>\n                                                Next\n                                            </Next>\n                                        </StepperFooter>\n                                    )}\n                                </StepperBody>\n                            )}\n                        </Item>\n                        <Line></Line>\n                        <Item id=\"thirdStep\">\n                            <StepperHead onClick={() => toggle(3)}>\n                                <Step>3</Step>Add your project details\n                            </StepperHead>\n                            {stepThree && (\n                                <StepperBody>\n                                    <Container>\n                                        <Row>\n                                            <CustomCol lg={6}>\n                                                <Label>Sale title</Label>\n                                                <InputText\n                                                    value={saleTitle}\n                                                    onChange={(e) => {\n                                                        setSaleTitle(e.target.value)\n                                                    }}\n                                                />\n                                                {saleTitleError == true ? <Alblur>Please fill this field</Alblur> : ''}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Telegram Link</Label>\n                                                <InputText\n                                                    value={telegramLink}\n                                                    onChange={(e) => {\n                                                        setTelegramLink(e.target.value)\n                                                    }}\n                                                />\n                                                {telegramLinkError == true ? <Alblur>Please fill this field</Alblur> : ''}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Discord </Label>\n                                                <InputText\n                                                    value={discord}\n                                                    onChange={(e) => {\n                                                        setDiscord(e.target.value)\n                                                    }}\n                                                />\n                                                {discordError == true ? <Alblur>Please fill this field</Alblur> : ''}\n                                            </CustomCol>\n                                            <CustomCol lg={6}>\n                                                <Label>Twitter </Label>\n                                                <InputText\n                                                    value={twitter}\n                                                    onChange={(e) => {\n                                                        setTwitter(e.target.value)\n                                                    }}\n                                                />\n                                                {twitterError == true ? <Alblur>Please fill this field</Alblur> : ''}\n                                            </CustomCol>\n                                            <CustomCol lg={12}>\n                                                <Label>Website</Label>\n                                                <InputText\n                                                    value={website}\n                                                    onChange={(e) => {\n                                                        setWebsite(e.target.value)\n                                                    }}\n                                                />\n                                                {websiteError == true ? <Alblur>Please fill this field</Alblur> : ''}\n                                            </CustomCol>\n                                        </Row>\n                                    </Container>\n                                    {activeStep > 2 && (\n                                        <StepperFooter>\n                                            <Back\n                                                onClick={() => {\n                                                    scrollToStepSecond()\n                                                    setStepTwo(true)\n                                                    setStepThree(false)\n                                                    setActiveStep(2)\n                                                }}>\n                                                Back\n                                            </Back>\n                                            <Next\n                                                onClick={() => {\n                                                    // shortUrl.short(discord, function (error, shortDiscordLink) {\n                                                    //     console.log(shortDiscordLink)\n                                                    setShortDiscordLink(discord)\n                                                    // })\n                                                    // shortUrl.short(twitter, function (error, shortTwitterLink) {\n                                                    //     console.log(shortTwitterLink)\n                                                    setShortTwitterLink(twitter)\n                                                    // })\n                                                    // shortUrl.short(telegramLink, function (error, shortTelegramLink) {\n                                                    setShortTelegramLink(telegramLink)\n                                                    // })\n                                                    // shortUrl.short(website, function (error, shortWebsiteLink) {\n                                                    setShortWebsiteLink(website)\n                                                    // })\n\n                                                    if (socialValiation()) {\n                                                        setStepThree(false)\n                                                        setStepFour(true)\n                                                        setActiveStep(4)\n                                                    }\n                                                }}>\n                                                Next\n                                            </Next>\n                                        </StepperFooter>\n                                    )}\n                                </StepperBody>\n                            )}\n                        </Item>\n                        <Line></Line>\n                        <Item>\n                            <StepperHead onClick={() => toggle(4)}>\n                                <Step>4</Step>Submit KYC and AUDIT\n                            </StepperHead>\n                            {stepFour && (\n                                <StepperBodyLast>\n                                    <Container>\n                                        <Row></Row>\n                                    </Container>\n                                    {activeStep > 3 && (\n                                        <StepperFooter>\n                                            <Back\n                                                onClick={() => {\n                                                    scrollToStepThird()\n                                                    setStepThree(true)\n                                                    setStepFour(false)\n                                                    setActiveStep(3)\n                                                }}>\n                                                Back\n                                            </Back>\n                                            <Next\n                                                onClick={() => {\n                                                    if (isConnected) {\n                                                        createMyTokenPreSale()\n                                                    } else {\n                                                        toast.error('Please connect your wallet first', {})\n                                                    }\n                                                }}>\n                                                Finish\n                                            </Next>\n                                        </StepperFooter>\n                                    )}\n                                </StepperBodyLast>\n                            )}\n                        </Item>\n                    </Stepper>\n                </Col>\n            </Row>\n            <Spacer />\n        </Container>\n    )\n}\n\nconst Heading = styled.h1`\n    text-align: center;\n`\n\nconst CustomCol = styled(Col)`\n    padding: 0rem 1rem;\n    box-sizing: border-box;\n`\n\nconst CardCol = styled(Col)`\n    padding: 0rem;\n    &:not(:last-child)::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        left: 11rem;\n        right: -3rem;\n        z-index: -1;\n        border-top: 3px dotted #00bcd4;\n        ${media.xs`\n        left: 4rem;\n\n      `}\n        ${media.sm`\n        left: 6rem;\n\n      `}\n        ${media.md`\n        left: 11rem;\n        right: -3rem;\n      `}\n    }\n`\nconst List = styled.div`\n    display: flex;\n    margin: 1rem 0rem;\n    justify-content: center;\n    ${media.xs`\n    justify-content: start;\n  `}\n    ${media.sm`\n    justify-content: start;\n  `}\n    ${media.md`\n    justify-content: center;\n  `}\n`\nconst Card = styled.div`\n    text-align: center;\n    position: relative;\n    padding: 2rem;\n    background: ${({active}) => (active ? '#00bcd4' : 'white')};\n    color: ${({active}) => (active ? 'white' : 'black')};\n    border-radius: 0.2rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    width: 8rem;\n    height: 3rem;\n    box-shadow: 0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%);\n    ${media.xs`\n    padding: 0.5rem;\n    width: 4rem;\n    height: 2rem;\n  `}\n    ${media.sm`\n    padding: 1rem;\n    width: 8rem;\n    height: 3rem;\n  `}\n    ${media.md`\n    padding: 2rem;\n    width: 8rem;\n    height: 3rem;\n  `}\n`\n\nconst CardHeading = styled.div`\n    font-weight: bold;\n    font-size: 1rem;\n    ${media.xs`\n    font-size: 0.5rem;\n  `}\n    ${media.sm`\n    font-size: 0.7rem;\n  `}\n    ${media.md`\n    font-size: 1rem;\n  `}\n`\nconst Spacer = styled.div`\n    height: 3rem;\n`\n\nconst Button = styled.a`\n    padding: 0.8rem 2rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    cursor: pointer;\n    &:hover {\n        background: #05b5cc;\n    }\n`\nconst FlexCenter = styled(Col)`\n    display: flex;\n    justify-content: center;\n`\nconst Stepper = styled.ul``\n\nconst Item = styled.li`\n    list-style: none;\n`\nconst StepperHead = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n`\nconst StepperBody = styled.div`\n    border-left: 0.2rem dotted #00bcd4;\n    padding: 2rem 2rem 0rem 2rem;\n    margin-left: 0.9rem;\n`\nconst StepperBodyLast = styled(StepperBody)`\n    border-left: none;\n    padding: 2rem;\n    margin-left: 0.9rem;\n    display: flex;\n    justify-content: center;\n`\nconst StepperFooter = styled.div`\n    display: flex;\n    margin-top: 1rem;\n    justify-content: flex-end;\n`\nconst Step = styled.div`\n    width: 2rem;\n    background: #00bcd4;\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 2rem;\n    color: white;\n    margin-right: 1rem;\n    cursor: pointer;\n`\nconst Line = styled.span`\n    width: 2rem;\n    border-left: 0.2rem dotted #00bcd4;\n    height: 2rem;\n    display: flex;\n    margin-left: 0.9rem;\n`\nconst Back = styled(Button)`\n    padding: 0.5rem 2rem !important;\n    font-size: 0.9rem !important;\n    background: #e91e63;\n    &:hover {\n        background: #d11555 !important;\n    }\n`\nconst Next = styled(Button)`\n    padding: 0.5rem 2rem !important;\n    font-size: 0.9rem !important;\n`\n\nconst Label = styled.p`\n    margin-bottom: 0.5rem;\n    font-size: 0.9rem;\n    font-weight: bold;\n`\nconst Select = styled.select`\n    width: 100%;\n    height: 35px;\n    background: white;\n    color: gray;\n    font-size: 14px;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n`\nconst InputText = styled.input`\n    // outline:none;\n    width: 100%;\n    font-size: 1.1rem;\n    padding: 0.4rem;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n`\nconst InputDate = styled(DateTimePicker)`\n    // outline:none;\n    width: 100%;\n    font-size: 1.1rem;\n    padding: 0.2rem;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n    & div {\n        border: 0rem !important;\n    }\n`\nconst Text = styled.p`\n    width: 100%;\n    font-size: 0.8rem;\n    color: #00bcd4;\n`\n\nconst Alblur = styled.span`\n    width: 100%;\n    font-size: 0.8rem;\n    color: red;\n`\n\nconst mapStateToProps = (state) => {\n    return {\n        shouldConnect: state.auth.shouldConnect,\n        isConnected: state.auth.isConnected\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    saveTokenAddressHandler: (data) => dispatch(saveTokenAddress(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LaunchPad)\n","export const PreSaleContract = {\n    id: '',\n    abi: [\n        {\n            inputs: [\n                {internalType: 'address', name: '_FactoryAddress', type: 'address'},\n                {internalType: 'address', name: '_DevAddress', type: 'address'}\n            ],\n            stateMutability: 'nonpayable',\n            type: 'constructor'\n        },\n        {inputs: [], name: 'DevAddress', outputs: [{internalType: 'address payable', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'DevFeesExempted', outputs: [{internalType: 'bool', name: '', type: 'bool'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'Id', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'LiqLockAddress', outputs: [{internalType: 'address', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'addLiquidityAndLockLPTokens', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [{internalType: 'address[]', name: '_whitelistedAddresses', type: 'address[]'}], name: 'addwhitelistedAddresses', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [], name: 'cancelAndTransferTokensToPresaleCreator', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [], name: 'claimTokens', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [{internalType: 'address', name: '', type: 'address'}], name: 'claimed', outputs: [{internalType: 'bool', name: '', type: 'bool'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'closeTime', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'collectFundsRaised', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {\n            inputs: [\n                {internalType: 'uint256', name: '_closeTime', type: 'uint256'},\n                {internalType: 'uint256', name: '_maxInvestInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_minInvestInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_uniLiquidityAddingTime', type: 'uint256'}\n            ],\n            name: 'editInfoPresaleDev',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {inputs: [], name: 'getRefund', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {inputs: [], name: 'hardCapInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'invest', outputs: [], stateMutability: 'payable', type: 'function'},\n        {inputs: [{internalType: 'address', name: '', type: 'address'}], name: 'investments', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'linkDiscord', outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'linkTelegram', outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'linkTwitter', outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'linkWebsite', outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'maxInvestInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'minInvestInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'onlyWhitelistedAddressesAllowed', outputs: [{internalType: 'bool', name: '', type: 'bool'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'openTime', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'presaleCancelled', outputs: [{internalType: 'bool', name: '', type: 'bool'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'presaleCreatorAddress', outputs: [{internalType: 'address payable', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'presaleCreatorClaimTime', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'presaleCreatorClaimWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'saleTitle', outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}], stateMutability: 'view', type: 'function'},\n        {\n            inputs: [\n                {internalType: 'address', name: '_presaleCreator', type: 'address'},\n                {internalType: 'address', name: '_tokenAddress', type: 'address'},\n                {internalType: 'address', name: '_unsoldTokensDumpAddress', type: 'address'}\n            ],\n            name: 'setAddressInfo',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {inputs: [{internalType: 'bool', name: '_DevFeesExempted', type: 'bool'}], name: 'setDevFeesExempted', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {\n            inputs: [\n                {internalType: 'uint256', name: '_totalTokens', type: 'uint256'},\n                {internalType: 'uint256', name: '_tokenPriceInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_hardCapInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_softCapInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_maxInvestInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_minInvestInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_openTime', type: 'uint256'},\n                {internalType: 'uint256', name: '_closeTime', type: 'uint256'}\n            ],\n            name: 'setGeneralInfo',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {internalType: 'address', name: '_LiqLockAddress', type: 'address'},\n                {internalType: 'uint256', name: '_DevFeePercentage', type: 'uint256'},\n                {internalType: 'uint256', name: '_MinDevFeeInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_Id', type: 'uint256'}\n            ],\n            name: 'setInfo',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {inputs: [{internalType: 'bool', name: '_onlyWhitelistedAddressesAllowed', type: 'bool'}], name: 'setOnlyWhitelistedAddressesAllowed', outputs: [], stateMutability: 'nonpayable', type: 'function'},\n        {\n            inputs: [\n                {internalType: 'bytes32', name: '_saleTitle', type: 'bytes32'},\n                {internalType: 'bytes32', name: '_linkTelegram', type: 'bytes32'},\n                {internalType: 'bytes32', name: '_linkDiscord', type: 'bytes32'},\n                {internalType: 'bytes32', name: '_linkTwitter', type: 'bytes32'},\n                {internalType: 'bytes32', name: '_linkWebsite', type: 'bytes32'}\n            ],\n            name: 'setStringInfo',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {\n            inputs: [\n                {internalType: 'uint256', name: '_uniListingPriceInWei', type: 'uint256'},\n                {internalType: 'uint256', name: '_uniLiquidityAddingTime', type: 'uint256'},\n                {internalType: 'uint256', name: '_uniLPTokensLockDurationInDays', type: 'uint256'},\n                {internalType: 'uint256', name: '_uniLiquidityPercentageAllocation', type: 'uint256'}\n            ],\n            name: 'setUniswapInfo',\n            outputs: [],\n            stateMutability: 'nonpayable',\n            type: 'function'\n        },\n        {inputs: [], name: 'softCapInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'token', outputs: [{internalType: 'contract IERC20', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'tokenPriceInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'tokensLeft', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'totalCollectedWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'totalInvestorsCount', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'totalTokens', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'uniLPTokensLockDurationInDays', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'uniLiquidityAdded', outputs: [{internalType: 'bool', name: '', type: 'bool'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'uniLiquidityAddingTime', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'uniLiquidityPercentageAllocation', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'uniListingPriceInWei', outputs: [{internalType: 'uint256', name: '', type: 'uint256'}], stateMutability: 'view', type: 'function'},\n        {inputs: [], name: 'unsoldTokensDumpAddress', outputs: [{internalType: 'address', name: '', type: 'address'}], stateMutability: 'view', type: 'function'},\n        {inputs: [{internalType: 'address', name: '', type: 'address'}], name: 'whitelistedAddresses', outputs: [{internalType: 'bool', name: '', type: 'bool'}], stateMutability: 'view', type: 'function'},\n        {stateMutability: 'payable', type: 'receive'}\n    ]\n}\n","import { useEffect, useState } from 'react';\n\nconst useCountdown = (targetDate) => {\n  const countDownDate = new Date(targetDate).getTime();\n\n  const [countDown, setCountDown] = useState(\n    countDownDate - new Date().getTime()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [countDownDate]);\n\n  return getReturnValues(countDown);\n};\n\nconst getReturnValues = (countDown) => {\n  // calculate time left\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n  );\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\n\n  return [days, hours, minutes, seconds];\n};\n\nexport { useCountdown };","import React from 'react';\n\nconst DateTimeDisplay = ({ value, type, isDanger }) => {\n  return (\n    <div className={isDanger ? 'countdown danger' : 'countdown'}>\n      <p>{value}</p>\n      <span>{type}</span>\n    </div>\n  );\n};\n\nexport default DateTimeDisplay;","import React from 'react'\nimport {useCountdown} from '../hooks/useCountdown'\nimport DateTimeDisplay from './DateTimeDisplay'\n\nconst ExpiredNotice = () => {\n    return (\n        <div className=\"expired-notice\">\n            <span>Sale Ended</span>\n        </div>\n    )\n}\n\nconst ExpiredNotice1 = () => {\n    return (\n        <div className=\"expired-notice\">\n            <span>Sale Started</span>\n        </div>\n    )\n}\n\nconst ShowCounter = ({days, hours, minutes, seconds}) => {\n    return (\n        <div className=\"show-counter\">\n            <div target=\"_blank\" rel=\"noopener noreferrer\" className=\"countdown-link\">\n                <DateTimeDisplay value={days} type={'Days'} isDanger={days <= 3} />\n                <p>:</p>\n                <DateTimeDisplay value={hours} type={'Hours'} isDanger={false} />\n                <p>:</p>\n                <DateTimeDisplay value={minutes} type={'Mins'} isDanger={false} />\n                <p>:</p>\n                <DateTimeDisplay value={seconds} type={'Seconds'} isDanger={false} />\n            </div>\n        </div>\n    )\n}\n\nconst CountdownTimer = ({targetDate}) => {\n    const [days, hours, minutes, seconds] = useCountdown(targetDate)\n\n    if (days + hours + minutes + seconds <= 0) {\n        return <ExpiredNotice />\n    } else {\n        return <ShowCounter days={days} hours={hours} minutes={minutes} seconds={seconds} />\n    }\n}\nexport default CountdownTimer\n","import React, {useEffect, useState, Link} from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col, media} from 'styled-bootstrap-grid'\nimport {Collapse} from 'react-bootstrap'\nimport {useSelector} from 'react-redux'\nimport {ethers} from 'ethers'\nimport {getLocal} from 'web3modal'\nimport {connect} from 'react-redux'\nimport {api} from '../config/apiBaseUrl'\nimport {PreSaleContract} from '../config/contracts/PreSale'\nimport {toast} from 'react-toastify'\nimport moment from 'moment'\nimport CountdownTimer from '../components/CountdownTimer'\nimport {useNavigate} from 'react-router-dom'\nimport {useCountdown} from '../hooks/useCountdown'\n\nimport axios from 'axios'\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers.post['Accept'] = 'application/json'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nconst EditPreSale = ({address, isConnected, preSaleViewToken}) => {\n    const signer = useSelector((state) => state.auth.signer)\n    const user = useSelector((state) => state.auth.user)\n    const [hardCapInWei, setHardCapInWei] = useState()\n    const [softCapInWei, setSoftCapInWei] = useState()\n    const [closeTime, setCloseTime] = useState()\n    const [openTime, setOpneTime] = useState()\n    const [maxInvestInWei, setMaxInvestInWei] = useState()\n    const [minInvestInWei, setMinInvetsInWei] = useState()\n    const [telegramLink, setTelegramLink] = useState()\n    const [twitterLink, setTwitterLink] = useState()\n    const [discordLink, setDiscordLink] = useState()\n    const [webisteLink, setWebsiteLink] = useState('')\n    const [investAmount, setInvestAmount] = useState('')\n    const [investerCount, setInvesterCount] = useState('')\n    const [totalInvestedAmount, setTotalInvestment] = useState('')\n    const [preSaleCreatorAddress, setPreSaleCreatorAddress] = useState('')\n    const [match, setMatch] = useState(false)\n    const [investementPreSale, setInvestementPreSale] = useState(null)\n    const [saleTitle, setSaleTitle] = useState('')\n    const [tokenAddress, setTokenAddress] = useState('')\n    const [liqLockAddress, setLiqLockAddress] = useState('')\n    const [unsoldTokenAddress, setUnSoldTokenAddress] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [closingTime, setClosingTime] = useState('')\n    const [startingTime, setStartingTime] = useState('')\n    const [balance, setBalance] = useState('')\n    const [saleStartTimeTrue, setSaleStartTimeTrue] = useState(false)\n    const navigate = useNavigate()\n    const preSaleStartTime = startingTime\n    const saleStartingTime = startingTime\n\n    const [days, hours, minutes, seconds] = useCountdown(saleStartingTime)\n    const [closingTimeDays, closingTimeHours, closingTimeMinutes, closingTimeSeconds] = useCountdown(closingTime)\n\n    useEffect(async () => {\n        if (signer) {\n            if (user && user.tokens.length > 0) {\n                if (!preSaleViewToken) {\n                    preSaleViewToken = user.tokens[0].token\n                    setMatch(true)\n                }\n            } //todo.. if user view the page without login/or directly.. check in user tokens if match then its setmatch(true)\n            const _investementPreSale = new ethers.Contract(preSaleViewToken, PreSaleContract.abi, signer)\n            setInvestementPreSale(_investementPreSale)\n        }\n    }, [signer])\n\n    useEffect(async () => {\n        if (investementPreSale) {\n            setLoading(true)\n            await readLaunchpadInfo()\n            setLoading(false)\n        }\n    }, [investementPreSale])\n\n    const getBalance = async () => {\n        try {\n            const _balance = await signer.getBalance() // to do .... get Gas Price\n            /*const gasFee = await ethers.getDefaultProvider().estimateGas({\n                // Wrapped ETH address\n                to: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n\n                // `function deposit() payable`\n                data: '0xd0e30db0',\n\n                // 1 ether\n                value: ethers.utils.parseEther('0.1')\n            })\n            const _estimatedMaxAmount = _balance - gasFee*/\n\n            setBalance(ethers.utils.formatEther(_balance))\n            setInvestAmount(balance)\n\n            // console.log(_estimatedMaxAmount)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const readLaunchpadInfo = async () => {\n        const hardCapInWei = await investementPreSale.hardCapInWei()\n        const softCapInWei = await investementPreSale.softCapInWei()\n        const maxInvestInWei = await investementPreSale.maxInvestInWei()\n        const minInvestInWei = await investementPreSale.minInvestInWei()\n        const totalCollectedWei = await investementPreSale.totalCollectedWei()\n        const startTime = await investementPreSale.openTime()\n        setStartingTime(startTime * 1000)\n        const endTime = await investementPreSale.closeTime()\n        setClosingTime(endTime * 1000)\n        const _tokenAddress = await investementPreSale.token()\n        setTokenAddress(_tokenAddress)\n        const presaleCreatorAddress = await investementPreSale.presaleCreatorAddress()\n        setPreSaleCreatorAddress(presaleCreatorAddress)\n        const liqLockAddress = await investementPreSale.LiqLockAddress()\n        setLiqLockAddress(liqLockAddress)\n        const unsoldTokenAddress = await investementPreSale.unsoldTokensDumpAddress()\n        setUnSoldTokenAddress(unsoldTokenAddress)\n        const _totalInvestorsCount = await investementPreSale.totalInvestorsCount()\n        setInvesterCount(_totalInvestorsCount)\n\n        const startDate = moment.unix(startTime).format('dddd, MMMM Do, YYYY h:mm:ss A')\n        setOpneTime(startDate)\n        const endDate = moment.unix(endTime).format('dddd, MMMM Do, YYYY h:mm:ss A')\n        setCloseTime(endDate)\n\n        const _hardCapInWei = ethers.utils.formatEther(hardCapInWei)\n        setHardCapInWei(_hardCapInWei)\n        const _softCapInWie = ethers.utils.formatEther(softCapInWei)\n        setSoftCapInWei(_softCapInWie)\n        const _maxInvestInWei = ethers.utils.formatEther(maxInvestInWei)\n        setMaxInvestInWei(_maxInvestInWei)\n        const _minInvestInWei = ethers.utils.formatEther(minInvestInWei)\n        setMinInvetsInWei(_minInvestInWei)\n        const _totalCollectedWei = ethers.utils.formatEther(totalCollectedWei)\n        setTotalInvestment(_totalCollectedWei)\n\n        const telegramBytes = await investementPreSale.linkTelegram()\n        const twitterBytes = await investementPreSale.linkTwitter()\n        const discordBytes = await investementPreSale.linkDiscord()\n        const websiteBytes = await investementPreSale.linkWebsite()\n        const saleTitleBytes = await investementPreSale.saleTitle()\n        const _telegramLink = ethers.utils.parseBytes32String(telegramBytes)\n        setTelegramLink(_telegramLink)\n        const _twitterLink = ethers.utils.parseBytes32String(twitterBytes)\n        setTwitterLink(_twitterLink)\n        const _discordLink = ethers.utils.parseBytes32String(discordBytes)\n        setDiscordLink(_discordLink)\n        const _websiteLink = ethers.utils.parseBytes32String(websiteBytes)\n        setWebsiteLink(_websiteLink)\n        const _saleTitle = ethers.utils.parseBytes32String(saleTitleBytes)\n        setSaleTitle(_saleTitle)\n    }\n\n    const investIn = async () => {\n        if (!investementPreSale) {\n            alert('please connect your wallet first')\n            if (!investAmount) {\n                alert('Please enter the amount for investment')\n            }\n        }\n        try {\n            const investTx = await investementPreSale.invest({value: ethers.utils.parseEther(investAmount)})\n            await investTx.wait()\n        } catch (error) {\n            if (error.data.message.includes('insufficient funds for transfer')) {\n                toast.error('Your wallet doesn`t have enough funds to invest')\n            } else if (error.data.message.includes('Closed')) {\n                toast.error('Presale is closed')\n            } else if (error.data.message.includes('Not yet opened')) {\n                toast.error('Please wait !! Presale is not open yet')\n            } else if (error.data.message.includes('Min investment not reached')) {\n                toast.error('Please see the miminmum investment requirement and enter the right amount')\n            } else {\n                toast.error(error.data.error)\n            }\n        }\n    }\n\n    const addLiquidityAndLockLPTokens = async () => {\n        try {\n            const addLiquidityAndLockLPTokensTx = await investementPreSale.addLiquidityAndLockLPTokens()\n            await addLiquidityAndLockLPTokensTx.wait()\n        } catch (error) {\n            if (error.data.message.includes('Liquidity already added')) {\n                toast.error('Liquidity already added')\n            } else if (error.data.message.includes('Not whitelisted or not presale creator')) {\n                toast.error('Make sure you are adding liquidity from presale creator address')\n            } else if (error.data.message.includes('Not presale creator')) {\n                toast.error('Make sure you are adding liquidity from presale creator address')\n            } else if (error.data.message.includes('Not presale creator or investor')) {\n                toast.error('Only Presale Creator or Investor can add liquidity')\n            } else if (error.data.message.includes('Soft cap not reached')) {\n                toast.error('Project has not reahced to minimum investment goal')\n            } else if (error.data.message.includes('Liquidity cannot be added yet')) {\n                toast.error('Can not add liquidity')\n            } else {\n                toast.error('No investment made, Liquidity can not be added')\n            }\n        }\n    }\n\n    const claimTokens = async () => {\n        try {\n            const claimTokens = await investementPreSale.claimTokens()\n            await claimTokens.wait()\n        } catch (error) {\n            if (error.data) {\n                if (error.data.message.includes('Not an investor')) {\n                    toast.error('Only investors are aligible to claim tokens')\n                } else {\n                    toast.error(error.data.message)\n                }\n            } else {\n                toast.error('Something went wrong. Please try again.')\n            }\n        }\n    }\n\n    const cancelAndTransferTokensToPresaleCreator = async () => {\n        try {\n            const cancelAndTransferTokensToPresaleCreatorTx = await investementPreSale.cancelAndTransferTokensToPresaleCreator()\n            await cancelAndTransferTokensToPresaleCreatorTx.wait()\n        } catch (error) {\n            toast.error('Liquidity has not been added yet')\n        }\n    }\n\n    const collectFundsRaised = async () => {\n        try {\n            const collectFundsRaisedTx = await investementPreSale.collectFundsRaised()\n            await collectFundsRaisedTx.wait()\n        } catch (error) {\n            if (error.data) {\n                if (error.data.message.includes('Not presale creator')) {\n                    toast.error('Only presale creater can withdraw funds')\n                } else if (error.data.message.includes('execution reverted')) {\n                    toast.error('No funds to with draw')\n                }\n            } else {\n                toast.error('Something went wrong. Please try again.')\n            }\n        }\n    }\n\n    const getRefund = async () => {\n        try {\n            const getRefundTx = await investementPreSale.getRefund()\n            await getRefundTx.wait()\n        } catch (error) {\n            if (error.data) {\n                if (error.data.message.includes('Not an investor')) {\n                    toast.error('Only investors are aligible to be refunded')\n                } else {\n                    toast.error(error.data.message)\n                }\n            } else {\n                toast.error('Something went wrong. Please try again.')\n            }\n        }\n    }\n\n    return (\n        <>\n            <Wrapper>\n                {investementPreSale && !loading && (\n                    <>\n                        {!isConnected && navigate('/')}\n                        <Heading>\n                            {saleTitle?.toString()}\n                            <Spacer />\n                        </Heading>\n\n                        <CustomRow>\n                            <ColCenter lg={8}>\n                                {saleStartingTime > new Date().getTime() && (\n                                    <>\n                                        Remaining time for Presale opening\n                                        <Spacer />\n                                        <Spacer />\n                                        <CountdownTimer targetDate={saleStartingTime} />\n                                    </>\n                                )}\n                            </ColCenter>\n                            <ColCenter lg={8}>\n                                {days + hours + minutes + seconds <= 0 && (\n                                    <>\n                                        {closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 && <>Remaining time for Presale closing</>}\n\n                                        <CountdownTimer targetDate={closingTime} />\n                                    </>\n                                )}\n                            </ColCenter>\n                        </CustomRow>\n                        <Spacer />\n                        <Spacer />\n\n                        <Row>\n                            <Column lg={6}>\n                                <Text>Maximum Invest per Address (BNB):</Text> <Content>{maxInvestInWei?.toString()}</Content>\n                            </Column>\n                            <Column lg={6}>\n                                <Text>Minimum Invest per Address (BNB):</Text> <Content>{minInvestInWei?.toString()}</Content>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            <Column lg={6}>\n                                <Text>Maximum Capital (BNB):</Text> <Content>{hardCapInWei?.toString()}</Content>\n                            </Column>\n                            <Column lg={6}>\n                                <Text>Minimum Capital (BNB):</Text>\n                                <Content> {softCapInWei?.toString()}</Content>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            <Column lg={6}>\n                                <Text>Total Investors :</Text>\n                                <Content>{investerCount?.toString()}</Content>\n                            </Column>\n                            <Column lg={6}>\n                                <Text>Total Invested Amount in BNB: </Text>\n                                <Content>{totalInvestedAmount?.toString()}</Content>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            <Column lg={6}>\n                                <Text>Token Address :</Text>\n                                <Content>\n                                    {' '}\n                                    <a href={`https://testnet.bscscan.com/address/${tokenAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                        {tokenAddress?.toString()}\n                                    </a>\n                                </Content>\n                            </Column>\n                            <Column lg={6}>\n                                <Text>PreSale Creator Adress : </Text>\n                                <Content>\n                                    {' '}\n                                    <a href={`https://testnet.bscscan.com/address/${preSaleCreatorAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                        {preSaleCreatorAddress?.toString()}\n                                    </a>\n                                </Content>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            <Column lg={6}>\n                                <Text>Liuidity Lock Address :</Text>\n                                <Content>\n                                    {' '}\n                                    <a href={`https://testnet.bscscan.com/address/${liqLockAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                        {liqLockAddress?.toString()}\n                                    </a>\n                                </Content>\n                            </Column>\n                            <Column lg={6}>\n                                <Text>Unsold Tokens Address: </Text>\n\n                                <Content>\n                                    <a href={`https://testnet.bscscan.com/address/${unsoldTokenAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                        {unsoldTokenAddress?.toString()}\n                                    </a>\n                                </Content>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            <Column lg={6}>\n                                <Text>Start Time:</Text>\n                                <Content>{openTime?.toString()}</Content>\n                            </Column>\n                            <Column lg={6}>\n                                <Text>End Time:</Text> <Content>{closeTime?.toString()}</Content>\n                            </Column>\n                        </Row>\n                        <Row>\n                            <Column>\n                                <Heading>Social Details</Heading>\n                            </Column>\n                        </Row>\n                        <Row>\n                            <Column lg={12}>\n                                <a href={webisteLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}\n                                    <Icon src=\"/images/website.png\" />\n                                </a>\n                                <a href={discordLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}\n                                    <Icon src=\"/images/discord.svg\" />\n                                </a>\n                                <a href={telegramLink}>\n                                    {' '}\n                                    <Icon src=\"/images/telegram.svg\" />\n                                </a>\n                                <a href={twitterLink}>\n                                    {' '}\n                                    <Icon src=\"/images/twitter.png\" />\n                                </a>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            {match == false && closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 && days + hours + minutes + seconds <= 0 && (\n                                <Flexed lg={10}>\n                                    <ButtonContainer>\n                                        <Button onClick={investIn}>Invest</Button>\n                                    </ButtonContainer>\n                                    <div>\n                                        <InputText\n                                            value={investAmount.toString()}\n                                            onChange={(e) => {\n                                                setInvestAmount(e.target.value)\n                                            }}\n                                        />{' '}\n                                        <MaxButton onClick={getBalance}>MAX</MaxButton>\n                                    </div>\n                                </Flexed>\n                            )}\n                        </Row>\n                        {days + hours + minutes + seconds <= 0 && (\n                            <>\n                                {closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 && <>Remaining time for Presale closing</>}\n                                <CustomRow>\n                                    <SecondButtonContainer lg={3}>\n                                        <Button1 onClick={addLiquidityAndLockLPTokens}>Add Liquidity</Button1>\n                                    </SecondButtonContainer>\n                                    {match && (\n                                        <>\n                                            {' '}\n                                            <SecondButtonContainer lg={3}>\n                                                <Button1 onClick={cancelAndTransferTokensToPresaleCreator}>Cancel Presale</Button1>\n                                            </SecondButtonContainer>\n                                            <SecondButtonContainer lg={3}>\n                                                <Button1 onClick={collectFundsRaised}>Collect Fund Raised</Button1>\n                                            </SecondButtonContainer>{' '}\n                                        </>\n                                    )}\n                                    {match == false && (\n                                        <>\n                                            <SecondButtonContainer lg={3}>\n                                                <Button1 onClick={claimTokens}>Claim Token</Button1>\n                                            </SecondButtonContainer>\n                                            {/* <SecondButtonContainer lg={3}>\n                                    <Button1 onClick={readLaunchpadInfo}>Read Info</Button1>\n                                </SecondButtonContainer> */}\n                                            <SecondButtonContainer lg={3}>\n                                                <Button1 onClick={getRefund}>Get Refund</Button1>\n                                            </SecondButtonContainer>\n\n                                            {/* <SecondButtonContainer lg={3}>\n                            <Button1 onClick={apiCall}> Save</Button1>\n                     </SecondButtonContainer> */}\n                                        </>\n                                    )}\n                                </CustomRow>\n                            </>\n                        )}\n\n                        <Spacer />\n                    </>\n                )}\n            </Wrapper>\n            {loading && (\n                <LoadingPanelContent>\n                    <LoadingPanel src=\"/images/Preloader.gif\" />\n                </LoadingPanelContent>\n            )}\n        </>\n    )\n}\n\nconst Wrapper = styled(Container)`\n    padding-top: 8rem;\n`\nconst ButtonContainer = styled.div`\n    display: flex;\n    margin-left: 0rem;\n    ${media.xs`\n    margin-left: 0rem;\n  `}\n    ${media.sm`\n    margin-left: 14.5rem;\n  `}\n    ${media.md`\n    margin-left: 14.5rem;\n  `}\n    ${media.lg`\n    margin-left: 14.5rem;\n  `}\n`\nconst Column = styled(Col)`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n`\nconst SecondButtonContainer = styled(Column)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 0.5rem;\n`\n\nconst Flex = styled(Column)`\n    display: flex;\n    align-items: center;\n`\n\nconst Flexed = styled(Column)`\n    display: flex;\n    align-items: baseline;\n`\n\nconst ButtonContent = styled(Flex)`\n    justify-content: center;\n`\n\nconst Logo = styled.img`\n    width: 8rem;\n    height: 8rem;\n    border-radius: 5rem;\n    border: 1px solid #eee;\n`\nconst Heading = styled.h1`\n    text-align: center;\n`\nconst Spacer = styled.div`\n    height: 1rem;\n`\n\nconst InputText = styled.input`\n    // outline:none;\n    height: 2.4rem;\n    width: 100%;\n    font-size: 1.1rem;\n    padding: 0.4rem;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n`\nconst Button = styled.a`\n    width: 10rem;\n    text-align: center;\n    padding: 0.5rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 1rem 1rem 0;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n        background: #05b5cc;\n    }\n`\nconst MaxButton = styled.a`\n    position: absolute;\n    left: 36.5rem;\n    text-align: center;\n    padding: 0.5rem;\n    font-weight: 500;\n    color: #00bcd4;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    text-decoration: none;\n    cursor: pointer;\n    align-items: center;\n    ${media.xs`\n    left: 22.5rem;\n  `}\n    ${media.sm`\n    left: 22.5rem;\n  `}\n    ${media.md`\n    left: 36.5rem;\n  `}\n    ${media.lg`\n    left: 36.5rem;\n  `}\n`\nconst Button1 = styled.a`\n    width: 100%;\n    text-align: center;\n    padding: 0.5rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    text-decoration: none;\n    cursor: pointer;\n    align-items: center;\n    &:hover {\n        background: #05b5cc;\n    }\n`\n\nconst ColCenter = styled(Column)`\n    display: flex;\n    justify-content: center;\n`\nconst Icon = styled.img`\n    margin-right: 1rem;\n    width: 2.5rem;\n`\nconst LoadingPanelContent = styled.div`\n    width: 100%;\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    top: 0;\n    bottom: 0;\n    background: #00000038;\n`\nconst LoadingPanel = styled.img`\n    width: 20%;\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    top: 0;\n    bottom: 0;\n`\n\nconst Text = styled.span`\n    font-weight: bold;\n`\nconst Content = styled.p`\n    margin-left: 0.2rem;\n    font-size: 0.9rem;\n`\n\nconst CustomRow = styled(Row)`\n    display: flex;\n    justify-content: center;\n`\n\nconst mapStateToProps = (state) => {\n    return {\n        address: state.auth.address,\n        isConnected: state.auth.isConnected\n    }\n}\nexport default connect(mapStateToProps, null)(EditPreSale)\n","import React, {useEffect, useState, Link} from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col, media} from 'styled-bootstrap-grid'\nimport {Collapse} from 'react-bootstrap'\nimport {useSelector} from 'react-redux'\nimport {ethers} from 'ethers'\nimport {getLocal} from 'web3modal'\nimport DateTimePicker from 'react-datetime-picker'\nimport {connect} from 'react-redux'\nimport {api} from '../config/apiBaseUrl'\nimport {PreSaleContract} from '../config/contracts/PreSale'\nimport {toast} from 'react-toastify'\nimport moment from 'moment'\nimport CountdownTimer from '../components/CountdownTimer'\nimport {useNavigate} from 'react-router-dom'\nimport {useCountdown} from '../hooks/useCountdown'\nimport EditPreSale from './EditPreSale'\n\nimport axios from 'axios'\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers.post['Accept'] = 'application/json'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nconst PreSaleDetail = ({address, isConnected, preSaleViewToken}) => {\n    const signer = useSelector((state) => state.auth.signer)\n    const user = useSelector((state) => state.auth.user)\n    const [editPreSale, setEditPreSale] = useState(false)\n    const [hardCapInWei, setHardCapInWei] = useState()\n    const [softCapInWei, setSoftCapInWei] = useState()\n    const [closeTime, setCloseTime] = useState()\n    const [openTime, setOpneTime] = useState()\n    const [maxInvestInWei, setMaxInvestInWei] = useState('0.1')\n    const [minInvestInWei, setMinInvetsInWei] = useState('0.1')\n    const [telegramLink, setTelegramLink] = useState()\n    const [twitterLink, setTwitterLink] = useState()\n    const [discordLink, setDiscordLink] = useState()\n    const [webisteLink, setWebsiteLink] = useState('')\n    const [investAmount, setInvestAmount] = useState('')\n    const [investerCount, setInvesterCount] = useState('')\n    const [totalInvestedAmount, setTotalInvestment] = useState('')\n    const [preSaleCreatorAddress, setPreSaleCreatorAddress] = useState('')\n    const [isDeveloper, setIsDeveloper] = useState(false)\n    const [investementPreSale, setInvestementPreSale] = useState(null)\n    const [saleTitle, setSaleTitle] = useState('')\n    const [tokenAddress, setTokenAddress] = useState('')\n    const [liqLockAddress, setLiqLockAddress] = useState('')\n    const [unsoldTokenAddress, setUnSoldTokenAddress] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [closingTime, setClosingTime] = useState('')\n    const [startingTime, setStartingTime] = useState('')\n    const [uniLiquidityAdingTime, setuniLiquidityAddingTime] = useState('')\n    const [liquidityDate, setLiquidityDate] = useState('')\n    const [balance, setBalance] = useState('')\n    const [editCloseTime, setEditCLoseTime] = useState(new Date())\n    const [editLiqTime, setEditLiqTime] = useState(new Date())\n    const navigate = useNavigate()\n    const preSaleStartTime = startingTime\n    const saleStartingTIme = startingTime\n\n    const [days, hours, minutes, seconds] = useCountdown(saleStartingTIme)\n    const [closingTimeDays, closingTimeHours, closingTimeMinutes, closingTimeSeconds] = useCountdown(closingTime)\n\n    useEffect(async () => {\n        if (signer) {\n            if (user && user.tokens.length > 0) {\n                if (!preSaleViewToken) {\n                    //todo..show all project\n                    preSaleViewToken = user.tokens[0].token\n                    setIsDeveloper(true)\n                } else {\n                    for (let i = 0; i < user.tokens.length; i++) {\n                        if (preSaleViewToken == user.tokens[i].token) {\n                            setIsDeveloper(true)\n                        }\n                    }\n                }\n            }\n            const _investementPreSale = new ethers.Contract(preSaleViewToken, PreSaleContract.abi, signer)\n            setInvestementPreSale(_investementPreSale)\n        }\n    }, [signer])\n\n    // useEffect(async () => {\n    // alert(isDeveloper)\n    // }, [isDeveloper])\n\n    useEffect(async () => {\n        if (investementPreSale) {\n            setLoading(true)\n            await readLaunchpadInfo()\n            setLoading(false)\n        }\n    }, [investementPreSale])\n\n    const getBalance = async () => {\n        try {\n            const _balance = await signer.getBalance()\n            /*const gasFee = await ethers.getDefaultProvider().estimateGas({\n                // Wrapped ETH address\n                to: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n\n                // `function deposit() payable`\n                data: '0xd0e30db0',\n\n                // 1 ether\n                value: ethers.utils.parseEther('0.1')\n            })\n            const _estimatedMaxAmount = _balance - gasFee*/\n\n            setBalance(ethers.utils.formatEther(_balance))\n            setInvestAmount(balance)\n\n            // console.log(_estimatedMaxAmount)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const readLaunchpadInfo = async () => {\n        const hardCapInWei = await investementPreSale.hardCapInWei()\n        const softCapInWei = await investementPreSale.softCapInWei()\n        const maxInvestInWei = await investementPreSale.maxInvestInWei()\n        const minInvestInWei = await investementPreSale.minInvestInWei()\n        const totalCollectedWei = await investementPreSale.totalCollectedWei()\n        const startTime = await investementPreSale.openTime()\n        setStartingTime(startTime * 1000)\n        const endTime = await investementPreSale.closeTime()\n        setClosingTime(endTime * 1000)\n        const _tokenAddress = await investementPreSale.token()\n        setTokenAddress(_tokenAddress)\n        const presaleCreatorAddress = await investementPreSale.presaleCreatorAddress()\n        setPreSaleCreatorAddress(presaleCreatorAddress)\n        const liqLockAddress = await investementPreSale.LiqLockAddress()\n        setLiqLockAddress(liqLockAddress)\n        const unsoldTokenAddress = await investementPreSale.unsoldTokensDumpAddress()\n        setUnSoldTokenAddress(unsoldTokenAddress)\n        const _totalInvestorsCount = await investementPreSale.totalInvestorsCount()\n        setInvesterCount(_totalInvestorsCount)\n\n        const liquidityAddingTime = await investementPreSale.uniLiquidityAddingTime()\n        setuniLiquidityAddingTime(liquidityAddingTime)\n\n        const startDate = moment.unix(startTime).format('dddd, MMMM Do, YYYY h:mm:ss A')\n        setOpneTime(startDate)\n        const endDate = moment.unix(endTime).format('dddd, MMMM Do, YYYY h:mm:ss A')\n        setCloseTime(endDate)\n        const liquidityAddingDate = moment.unix(liquidityAddingTime).format('dddd, MMMM Do, YYYY h:mm:ss A')\n        setLiquidityDate(liquidityAddingDate)\n\n        const _hardCapInWei = ethers.utils.formatEther(hardCapInWei)\n        setHardCapInWei(_hardCapInWei)\n        const _softCapInWie = ethers.utils.formatEther(softCapInWei)\n        setSoftCapInWei(_softCapInWie)\n        const _maxInvestInWei = ethers.utils.formatEther(maxInvestInWei)\n        setMaxInvestInWei(_maxInvestInWei)\n        const _minInvestInWei = ethers.utils.formatEther(minInvestInWei)\n        setMinInvetsInWei(_minInvestInWei)\n        const _totalCollectedWei = ethers.utils.formatEther(totalCollectedWei)\n        setTotalInvestment(_totalCollectedWei)\n\n        const telegramBytes = await investementPreSale.linkTelegram()\n        const twitterBytes = await investementPreSale.linkTwitter()\n        const discordBytes = await investementPreSale.linkDiscord()\n        const websiteBytes = await investementPreSale.linkWebsite()\n        const saleTitleBytes = await investementPreSale.saleTitle()\n        const _telegramLink = ethers.utils.parseBytes32String(telegramBytes)\n        setTelegramLink(_telegramLink)\n        const _twitterLink = ethers.utils.parseBytes32String(twitterBytes)\n        setTwitterLink(_twitterLink)\n        const _discordLink = ethers.utils.parseBytes32String(discordBytes)\n        setDiscordLink(_discordLink)\n        const _websiteLink = ethers.utils.parseBytes32String(websiteBytes)\n        setWebsiteLink(_websiteLink)\n        const _saleTitle = ethers.utils.parseBytes32String(saleTitleBytes)\n        setSaleTitle(_saleTitle)\n    }\n    let updateTokensTuple = {\n        maxInvestInWei: ethers.utils.parseUnits(maxInvestInWei, 18).toString(),\n        minInvestInWei: ethers.utils.parseUnits(minInvestInWei, 18).toString(),\n        closeTime: moment(editCloseTime).unix().toString(),\n        liqAddingTime: moment(editLiqTime).unix().toString()\n    }\n\n    const investIn = async () => {\n        if (!investementPreSale) {\n            alert('please connect your wallet first')\n            if (!investAmount) {\n                alert('Please enter the amount for investment')\n            }\n        }\n        try {\n            const investTx = await investementPreSale.invest({\n                value: ethers.utils.parseEther(investAmount)\n            })\n            await investTx.wait()\n        } catch (error) {\n            if (error.data.message.includes('insufficient funds for transfer')) {\n                toast.error('Your wallet doesn`t have enough funds to invest')\n            } else if (error.data.message.includes('Closed')) {\n                toast.error('Presale is closed')\n            } else if (error.data.message.includes('Not yet opened')) {\n                toast.error('Please wait !! Presale is not open yet')\n            } else if (error.data.message.includes('Min investment not reached')) {\n                toast.error('Please see the miminmum investment requirement and enter the right amount')\n            } else {\n                toast.error(error.data.error)\n            }\n        }\n    }\n\n    const addLiquidityAndLockLPTokens = async () => {\n        try {\n            const addLiquidityAndLockLPTokensTx = await investementPreSale.addLiquidityAndLockLPTokens()\n            await addLiquidityAndLockLPTokensTx.wait()\n        } catch (error) {\n            if (error.data) {\n                if (error.data.message.includes('Liquidity already added')) {\n                    toast.error('Liquidity already added')\n                } else if (error.data.message.includes('Not whitelisted or not presale creator')) {\n                    toast.error('Make sure you are adding liquidity from presale creator address')\n                } else if (error.data.message.includes('Not presale creator')) {\n                    toast.error('Make sure you are adding liquidity from presale creator address')\n                } else if (error.data.message.includes('Not presale creator or investor')) {\n                    toast.error('Only presale creator or investor can add liquidity')\n                } else if (error.data.message.includes('Soft cap not reached')) {\n                    toast.error('Project has not reahced to minimum investment goal')\n                } else if (error.data.message.includes('Liquidity cannot be added yet')) {\n                    toast.error('Can not add liquidity')\n                } else {\n                    toast.error('No investment made, liquidity can not be added')\n                }\n            }\n            toast.error('Something went wrong. Please try again later.')\n        }\n    }\n\n    const claimTokens = async () => {\n        try {\n            const claimTokens = await investementPreSale.claimTokens()\n            await claimTokens.wait()\n        } catch (error) {\n            if (error.data) {\n                if (error.data.message.includes('Not an investor.')) {\n                    toast.error('Only investors are aligible to claim tokens.')\n                } else {\n                    toast.error(error.data.message)\n                }\n            }\n            toast.error('Something went wrong. Please try again later.')\n        }\n    }\n\n    /*const cancelAndTransferTokensToPresaleCreator = async () => {\n        try {\n            const cancelAndTransferTokensToPresaleCreatorTx = await investementPreSale.cancelAndTransferTokensToPresaleCreator()\n            await cancelAndTransferTokensToPresaleCreatorTx.wait()\n        } catch (error) {\n            toast.error('Liquidity has not been added yet')\n        }\n    }*/\n\n    const collectFundsRaised = async () => {\n        try {\n            const collectFundsRaisedTx = await investementPreSale.collectFundsRaised()\n            await collectFundsRaisedTx.wait()\n        } catch (error) {\n            if (error.data.message.includes('Not presale creator')) {\n                toast.error('Only presale creater can withdraw funds')\n            } else if (error.data.message.includes('execution reverted')) {\n                toast.error('No funds to with draw')\n            }\n        }\n    }\n\n    const getRefund = async () => {\n        try {\n            const getRefundTx = await investementPreSale.getRefund()\n            await getRefundTx.wait()\n        } catch (error) {\n            if (error.data.message.includes('Not an investor')) {\n                toast.error('Only investors are aligible to be refunded')\n            } else {\n                toast.error(error.data.message)\n            }\n        }\n    }\n    const editInfoPresale = async () => {\n        try {\n            console.log(updateTokensTuple)\n            const editInfoPresale = await investementPreSale.editInfoPresaleDev(updateTokensTuple.closeTime, updateTokensTuple.maxInvestInWei, updateTokensTuple.minInvestInWei, updateTokensTuple.liqAddingTime)\n\n            const response = await editInfoPresale.wait()\n            console.log(updateTokensTuple)\n\n            if (response.data.status) {\n                axios\n                    .post(`${api}/pre_sale/update`, {\n                        endTime: updateTokensTuple.closeTime\n                    })\n                    .then((response) => {\n                        if (response.data.status) {\n                            toast.success('Presale updated Successfully')\n                            navigate('/')\n                        }\n                    })\n                    .catch(function (error) {})\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <>\n            {!editPreSale ? (\n                <>\n                    <Wrapper>\n                        {investementPreSale && !loading && (\n                            <>\n                                {!isConnected && navigate('/')}\n                                <Heading>\n                                    {saleTitle?.toString()}\n                                    <Spacer />\n                                </Heading>\n\n                                <CustomRow>\n                                    {saleStartingTIme > new Date().getTime() && (\n                                        <>\n                                            <ColCenter lg={8}>Remaining time for Presale opening</ColCenter>\n                                            <ColCenter lg={8}>\n                                                <CountdownTimer targetDate={saleStartingTIme} />\n                                            </ColCenter>\n                                        </>\n                                    )}\n\n                                    {days + hours + minutes + seconds <= 0 && (\n                                        <>\n                                            {closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 && <ColCenter>Remaining time for Presale closing </ColCenter>}\n                                            <ColCenter lg={8}>\n                                                <CountdownTimer targetDate={closingTime} />\n                                            </ColCenter>\n                                        </>\n                                    )}\n                                </CustomRow>\n                                <Spacer />\n                                <Spacer />\n\n                                <Row>\n                                    <Column lg={6}>\n                                        <Text>Maximum Invest per Address (BNB):</Text>{' '}\n                                        {isDeveloper && closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 ? (\n                                            <InputText\n                                                style={{marginLeft: '1rem'}}\n                                                width=\"40\"\n                                                type=\"number\"\n                                                min=\"0\"\n                                                pattern=\"\\d+\"\n                                                value={maxInvestInWei}\n                                                onChange={(e) => {\n                                                    setMaxInvestInWei(e.target.value)\n                                                }}\n                                            />\n                                        ) : (\n                                            <Content>{maxInvestInWei?.toString()}</Content>\n                                        )}\n                                    </Column>\n                                    <Column lg={6}>\n                                        <Text>Minimum Invest per Address (BNB):</Text>{' '}\n                                        {isDeveloper && closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 ? (\n                                            <InputText\n                                                style={{marginLeft: '1rem'}}\n                                                width=\"40\"\n                                                type=\"number\"\n                                                min=\"0\"\n                                                pattern=\"\\d+\"\n                                                value={minInvestInWei}\n                                                onChange={(e) => {\n                                                    setMinInvetsInWei(e.target.value)\n                                                }}\n                                            />\n                                        ) : (\n                                            <Content>{minInvestInWei?.toString()}</Content>\n                                        )}\n                                    </Column>\n                                </Row>\n                                <Spacer />\n                                <Row>\n                                    <Column lg={6}>\n                                        <Text>Maximum Capital (BNB):</Text> <Content>{hardCapInWei?.toString()}</Content>\n                                    </Column>\n                                    <Column lg={6}>\n                                        <Text>Minimum Capital (BNB):</Text>\n                                        <Content> {softCapInWei?.toString()}</Content>\n                                    </Column>\n                                </Row>\n                                <Spacer />\n                                <Row>\n                                    <Column lg={6}>\n                                        <Text>Total Investors :</Text>\n                                        <Content>{investerCount?.toString()}</Content>\n                                    </Column>\n                                    <Column lg={6}>\n                                        <Text>Total Invested Amount in BNB: </Text>\n                                        <Content>{totalInvestedAmount?.toString()}</Content>\n                                    </Column>\n                                </Row>\n                                <Spacer />\n                                <Row>\n                                    <Column lg={6}>\n                                        <Text>Token Address :</Text>\n                                        <Content>\n                                            {' '}\n                                            <a href={`https://testnet.bscscan.com/address/${tokenAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                                {tokenAddress?.toString()}\n                                            </a>\n                                        </Content>\n                                    </Column>\n                                    <Column lg={6}>\n                                        <Text>PreSale Creator Adress : </Text>\n                                        <Content>\n                                            {' '}\n                                            <a href={`https://testnet.bscscan.com/address/${preSaleCreatorAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                                {preSaleCreatorAddress?.toString()}\n                                            </a>\n                                        </Content>\n                                    </Column>\n                                </Row>\n                                <Spacer />\n                                <Row>\n                                    <Column lg={6}>\n                                        <Text>Liuidity Lock Address :</Text>\n                                        <Content>\n                                            {' '}\n                                            <a href={`https://testnet.bscscan.com/address/${liqLockAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                                {liqLockAddress?.toString()}\n                                            </a>\n                                        </Content>\n                                    </Column>\n                                    <Column lg={6}>\n                                        <Text>Unsold Tokens Address: </Text>\n\n                                        <Content>\n                                            <a href={`https://testnet.bscscan.com/address/${unsoldTokenAddress}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#2dc0cc'}}>\n                                                {unsoldTokenAddress?.toString()}\n                                            </a>\n                                        </Content>\n                                    </Column>\n                                </Row>\n                                <Spacer />\n                                <Row>\n                                    <Column lg={6}>\n                                        <Text>Start Time:</Text>\n                                        <Content>{openTime?.toString()}</Content>\n                                    </Column>\n\n                                    <Column lg={6}>\n                                        <Text>End Time:</Text> <Content>{closeTime?.toString()}</Content> {isDeveloper && closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 ? <InputDate width=\"40\" value={editCloseTime} onChange={setEditCLoseTime} /> : <Text>:</Text>}\n                                    </Column>\n\n                                    <Column lg={6}>\n                                        <Text>Liquidity Adding Time:</Text> <Content>{liquidityDate?.toString()}</Content>\n                                        {isDeveloper && closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 ? <InputDate width=\"40\" value={editLiqTime} onChange={setEditLiqTime} /> : <Text> :</Text>}\n                                    </Column>\n                                </Row>\n                                <Row>\n                                    <Column>\n                                        <Text>Social Details</Text>\n                                    </Column>\n                                </Row>\n                                <Row>\n                                    <Column lg={12}>\n                                        <a href={webisteLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {' '}\n                                            <Icon src=\"/images/website.png\" />\n                                        </a>\n                                        <a href={discordLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {' '}\n                                            <Icon src=\"/images/discord.svg\" />\n                                        </a>\n                                        <a href={telegramLink}>\n                                            {' '}\n                                            <Icon src=\"/images/telegram.svg\" />\n                                        </a>\n                                        <a href={twitterLink}>\n                                            {' '}\n                                            <Icon src=\"/images/twitter.png\" />\n                                        </a>\n                                    </Column>\n                                </Row>\n                                <Spacer />\n                                <Row>\n                                    {closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds >= 0 && days + hours + minutes + seconds <= 0 && (\n                                        <>\n                                            {isDeveloper == false && (\n                                                <Flexed lg={10}>\n                                                    <ButtonContainer>\n                                                        <Button onClick={investIn}>Invest</Button>\n                                                    </ButtonContainer>\n                                                    <div>\n                                                        <InputText\n                                                            value={investAmount.toString()}\n                                                            onChange={(e) => {\n                                                                setInvestAmount(e.target.value)\n                                                            }}\n                                                        />{' '}\n                                                        <MaxButton onClick={getBalance}>MAX</MaxButton>\n                                                    </div>\n                                                </Flexed>\n                                            )}\n                                            {isDeveloper && (\n                                                <Flexed lg={10}>\n                                                    <ButtonContainer>\n                                                        <Button onClick={editInfoPresale}>Edit Presale</Button>\n                                                    </ButtonContainer>\n                                                </Flexed>\n                                            )}\n                                        </>\n                                    )}\n                                </Row>\n                                {days + hours + minutes + seconds <= 0 && closingTimeDays + closingTimeHours + closingTimeMinutes + closingTimeSeconds <= 0 && (\n                                    <>\n                                        <CustomRow>\n                                            <>\n                                                <SecondButtonContainer lg={3}>\n                                                    <Button1 onClick={addLiquidityAndLockLPTokens}>Add Liquidity</Button1>\n                                                </SecondButtonContainer>\n                                            </>\n                                        </CustomRow>\n\n                                        <CustomRow>\n                                            {isDeveloper && (\n                                                <>\n                                                    <SecondButtonContainer lg={3}>\n                                                        <Button1 onClick={collectFundsRaised}>Collect Funds</Button1>\n                                                    </SecondButtonContainer>\n                                                </>\n                                            )}\n                                        </CustomRow>\n                                        <CustomRow>\n                                            {isDeveloper == false && (\n                                                <>\n                                                    <SecondButtonContainer lg={3}>\n                                                        <Button1 onClick={claimTokens}>Collect Token</Button1>\n                                                    </SecondButtonContainer>\n                                                </>\n                                            )}\n                                        </CustomRow>\n                                        <Spacer />\n                                        <Spacer />\n                                    </>\n                                )}\n\n                                <Spacer />\n                            </>\n                        )}\n                    </Wrapper>\n                    {loading && (\n                        <LoadingPanelContent>\n                            <LoadingPanel src=\"/images/Preloader.gif\" />\n                        </LoadingPanelContent>\n                    )}\n                </>\n            ) : (\n                <EditPreSale />\n            )}\n        </>\n    )\n}\n\nconst Wrapper = styled(Container)`\n    padding-top: 8rem;\n`\nconst ButtonContainer = styled.div`\n    display: flex;\n    margin-left: 0rem;\n    ${media.xs`\n    margin-left: 0rem;\n  `}\n    ${media.sm`\n    margin-left: 14.5rem;\n  `}\n    ${media.md`\n    margin-left: 14.5rem;\n  `}\n    ${media.lg`\n    margin-left: 14.5rem;\n  `}\n`\nconst Column = styled(Col)`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n`\nconst SecondButtonContainer = styled(Column)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 0.5rem;\n`\n\nconst Flex = styled(Column)`\n    display: flex;\n    align-items: center;\n`\n\nconst Flexed = styled(Column)`\n    display: flex;\n    align-items: baseline;\n`\n\nconst ButtonContent = styled(Flex)`\n    justify-content: center;\n`\n\nconst Logo = styled.img`\n    width: 8rem;\n    height: 8rem;\n    border-radius: 5rem;\n    border: 1px solid #eee;\n`\nconst Heading = styled.h3`\n    text-align: center;\n    position: relative;\n`\nconst Spacer = styled.div`\n    height: 1rem;\n`\n\nconst InputText = styled.input`\n    // outline:none;\n    height: 2.4rem;\n    width: ${({width}) => (width ? `${width}%` : '100%')};\n    font-size: 1.1rem;\n    padding: 0.4rem;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n`\n\nconst InputDate = styled(DateTimePicker)`\n    // outline:none;\n    width: ${({width}) => (width ? `${width}%` : '100%')};\n    font-size: 1.1rem;\n    padding: 0.2rem;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n    & div {\n        border: 0rem !important;\n    }\n`\n\nconst Button = styled.a`\n    width: 10rem;\n    text-align: center;\n    padding: 0.5rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 1rem 1rem 0;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n        background: #05b5cc;\n    }\n`\nconst MaxButton = styled.a`\n    position: absolute;\n    left: 36.5rem;\n    text-align: center;\n    padding: 0.5rem;\n    font-weight: 500;\n    color: #00bcd4;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    text-decoration: none;\n    cursor: pointer;\n    align-items: center;\n    ${media.xs`\n    left: 22.5rem;\n  `}\n    ${media.sm`\n    left: 22.5rem;\n  `}\n    ${media.md`\n    left: 36.5rem;\n  `}\n    ${media.lg`\n    left: 36.5rem;\n  `}\n`\nconst Button1 = styled.a`\n    width: 100%;\n    text-align: center;\n    padding: 0.5rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    text-decoration: none;\n    cursor: pointer;\n    align-items: center;\n    &:hover {\n        background: #05b5cc;\n    }\n`\nconst EditButton = styled.button`\n    width: 25%;\n    text-align: center;\n    padding: 0.5rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    text-decoration: none;\n    cursor: pointer;\n    align-items: center;\n    &:hover {\n        background: #05b5cc;\n    }\n`\n\nconst ColCenter = styled(Column)`\n    display: flex;\n    justify-content: center;\n`\nconst Icon = styled.img`\n    margin-right: 1rem;\n    width: 2.5rem;\n`\nconst LoadingPanelContent = styled.div`\n    width: 100%;\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    top: 0;\n    bottom: 0;\n    background: #00000038;\n`\nconst LoadingPanel = styled.img`\n    width: 20%;\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    top: 0;\n    bottom: 0;\n`\n\nconst Text = styled.span`\n    font-weight: bold;\n`\nconst Content = styled.p`\n    margin-left: 0.2rem;\n    font-size: 0.9rem;\n`\n\nconst CustomRow = styled(Row)`\n    display: flex;\n    justify-content: center;\n`\n\nconst CustomCol = styled(Col)`\npadding: 0rem 1rem;\nbox - sizing: border - box;\n`\n\nconst CardCol = styled(Col)`\npadding: 0rem;\n    &: not(: last - child)::after {\n    content: '';\n    position: absolute;\n    top: 50 %;\n    left: 11rem;\n    right: -3rem;\n    z - index: -1;\n    border - top: 3px dotted #00bcd4;\n        ${media.xs`\n        left: 4rem;\n\n      `}\n        ${media.sm`\n        left: 6rem;\n\n      `}\n        ${media.md`\n        left: 11rem;\n        right: -3rem;\n      `}\n}\n`\nconst List = styled.div`\ndisplay: flex;\nmargin: 1rem 0rem;\njustify - content: center;\n    ${media.xs`\n    justify-content: start;\n  `}\n    ${media.sm`\n    justify-content: start;\n  `}\n    ${media.md`\n    justify-content: center;\n  `}\n`\nconst Card = styled.div`\ntext - align: center;\nposition: relative;\npadding: 2rem;\nbackground: ${({active}) => (active ? '#00bcd4' : 'white')};\ncolor: ${({active}) => (active ? 'white' : 'black')};\nborder - radius: 0.2rem;\nborder: none;\nfont - size: 1rem;\nmargin: 0rem 0.5rem;\nwidth: 8rem;\nheight: 3rem;\nbox - shadow: 0 0 1px rgb(0 0 0 / 17 %), 0 4px 8px rgb(0 0 0 / 8 %), 0 8px 12px rgb(0 0 0 / 0 %), 0 12px 16px rgb(0 0 0 / 2 %);\n    ${media.xs`\n    padding: 0.5rem;\n    width: 4rem;\n    height: 2rem;\n  `}\n    ${media.sm`\n    padding: 1rem;\n    width: 8rem;\n    height: 3rem;\n  `}\n    ${media.md`\n    padding: 2rem;\n    width: 8rem;\n    height: 3rem;\n  `}\n`\n\nconst CardHeading = styled.div`\nfont - weight: bold;\nfont - size: 1rem;\n    ${media.xs`\n    font-size: 0.5rem;\n  `}\n    ${media.sm`\n    font-size: 0.7rem;\n  `}\n    ${media.md`\n    font-size: 1rem;\n  `}\n`\nconst FlexCenter = styled(Col)`\ndisplay: flex;\njustify - content: center;\n`\nconst Stepper = styled.ul``\n\nconst Item = styled.li`\nlist - style: none;\n`\nconst StepperHead = styled.div`\ndisplay: flex;\nalign - items: center;\ncursor: pointer;\n`\nconst StepperBody = styled.div`\nborder - left: 0.2rem dotted #00bcd4;\npadding: 2rem 2rem 0rem 2rem;\nmargin - left: 0.9rem;\n`\nconst StepperBodyLast = styled(StepperBody)`\nborder - left: none;\npadding: 2rem;\nmargin - left: 0.9rem;\ndisplay: flex;\njustify - content: center;\n`\nconst StepperFooter = styled.div`\ndisplay: flex;\nmargin - top: 1rem;\njustify - content: flex - end;\n`\nconst Step = styled.div`\nwidth: 2rem;\nbackground: #00bcd4;\nheight: 2rem;\ndisplay: flex;\nalign - items: center;\njustify - content: center;\nborder - radius: 2rem;\ncolor: white;\nmargin - right: 1rem;\ncursor: pointer;\n`\nconst Line = styled.span`\nwidth: 2rem;\nborder - left: 0.2rem dotted #00bcd4;\nheight: 2rem;\ndisplay: flex;\nmargin - left: 0.9rem;\n`\nconst Back = styled(Button)`\npadding: 0.5rem 2rem!important;\nfont - size: 0.9rem!important;\nbackground: #e91e63;\n    &:hover {\n    background: #d11555!important;\n}\n`\nconst Next = styled(Button)`\npadding: 0.5rem 2rem!important;\nfont - size: 0.9rem!important;\n`\n\nconst Label = styled.p`\nmargin - bottom: 0.5rem;\nfont - size: 0.9rem;\nfont - weight: bold;\n`\nconst Select = styled.select`\nwidth: 100 %;\nheight: 35px;\nbackground: white;\ncolor: gray;\nfont - size: 14px;\nborder: 0.09rem solid #e3e2e2;\nborder - radius: 0.3rem;\n`\n\nconst Alblur = styled.span`\nwidth: 100 %;\nfont - size: 0.8rem;\ncolor: red;\n`\n\nconst mapStateToProps = (state) => {\n    return {\n        address: state.auth.address,\n        isConnected: state.auth.isConnected\n    }\n}\nexport default connect(mapStateToProps, null)(PreSaleDetail)\n","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport {Container, Row, Col, media} from 'styled-bootstrap-grid'\nimport {Collapse} from 'react-bootstrap'\nimport {api} from '../config/apiBaseUrl'\nimport {toast} from 'react-toastify'\nimport {useSelector} from 'react-redux'\nimport PreSaleDetail from './PreSaleDetail'\nimport {useCountdown} from '../hooks/useCountdown'\nimport moment from 'moment'\nimport {TabList, Tab, TabPanel} from 'react-tabs'\nimport {ethers} from 'ethers'\nimport axios from 'axios'\n\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers.post['Accept'] = 'application/json'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nconst Product = () => {\n    const [activeTab, setActiveTab] = useState(1)\n    const [status, setStatus] = useState('success')\n    const [allProducts, setAllProducts] = useState([])\n    const [upComing, setUpComing] = useState([])\n    const [live, setLive] = useState([])\n    const [completed, setCompleted] = useState([])\n    const [preSaleViewToken, setPreSaleViewToken] = useState('')\n    const [livePreSales, setLivePreSales] = useState([])\n    const [completedPreSales, setCompletedPreSales] = useState([])\n    const [failesPreSales, setFailedPreSales] = useState([])\n    const isConnected = useSelector((state) => state.auth.isConnected)\n\n    useEffect(() => {\n        viewAllProjects()\n    }, [])\n\n    const viewAllProjects = () => {\n        axios\n            .get(`${api}/user/view_all_projects`)\n            .then((response) => {\n                if (response.data.status) {\n                    resetAllProducts()\n                    response.data.data.map((value, index) => {\n                        setAllProducts((preValue) => {\n                            return [...preValue, value]\n                        })\n                        //todo... add Maximum Capital (BNB)\n                        if (value.startTime != undefined) {\n                            if (moment.unix(value.startTime).format() >= moment().format()) {\n                                setUpComing(value)\n                            }\n                            if (moment.unix(value.endTime).format() >= moment().format() && moment.unix(value.startTime).format() <= moment().format()) {\n                                setLive(value)\n                            }\n                            if (moment.unix(value.endTime).format() <= moment().format()) {\n                                setCompleted(value)\n                            }\n                        }\n                    })\n                }\n            })\n            .catch(function (error) {\n                //todo..show error to user\n            })\n    }\n\n    const resetAllProducts = () => {\n        setAllProducts([])\n    }\n\n    return (\n        <>\n            {preSaleViewToken == '' ? (\n                <>\n                    <Wrapper>\n                        <Row>\n                            <Column>\n                                <Heading>View All LaunchPad</Heading>\n                            </Column>\n                        </Row>\n                        <Spacer />\n                        <Row>\n                            <STabs>\n                                <STabList>\n                                    <STab\n                                        onClick={() => {\n                                            setActiveTab(1)\n                                        }}\n                                        active={activeTab == 1}>\n                                        Upcoming\n                                    </STab>\n                                    <STab\n                                        onClick={() => {\n                                            setActiveTab(2)\n                                        }}\n                                        active={activeTab == 2}>\n                                        Live\n                                    </STab>\n                                    <STab\n                                        onClick={() => {\n                                            setActiveTab(3)\n                                        }}\n                                        active={activeTab == 3}>\n                                        Completed\n                                    </STab>\n                                </STabList>\n                                {activeTab == 1 && (\n                                    <STabPanel>\n                                        <TabContent>\n                                            <Container>\n                                                <Row>\n                                                    {allProducts.map((value, index) => {\n                                                        if (value.startTime != undefined) {\n                                                            return (\n                                                                <>\n                                                                    {' '}\n                                                                    {moment.unix(value.startTime).format() >= moment().format() ? (\n                                                                        <CustomCol lg={6}>\n                                                                            <Card\n                                                                                key={index + 'Upcoming'}\n                                                                                lg={12}\n                                                                                onClick={() => {\n                                                                                    if (isConnected) {\n                                                                                        setPreSaleViewToken(value.token)\n                                                                                    } else {\n                                                                                        toast.error('Please connect to wallet')\n                                                                                    }\n                                                                                }}>\n                                                                                <Content>\n                                                                                    <Label> Sale Title :</Label> {value.saleTitle ? ethers.utils.parseBytes32String(value.saleTitle) : '-'}\n                                                                                </Content>\n                                                                                <Content>\n                                                                                    <Label> Creator :</Label> {value.address ? value.address : '-'}\n                                                                                </Content>\n                                                                                <Content>\n                                                                                    <Label> Token :</Label> {value.token ? value.token : '-'}\n                                                                                </Content>\n                                                                            </Card>\n                                                                        </CustomCol>\n                                                                    ) : (\n                                                                        ''\n                                                                    )}\n                                                                </>\n                                                            )\n                                                        }\n                                                    })}\n                                                    {upComing.length == 0 ? <NotFoundText>No UpComing Projects Found</NotFoundText> : ''}\n                                                </Row>\n                                            </Container>\n                                        </TabContent>\n                                    </STabPanel>\n                                )}\n\n                                {activeTab == 2 && (\n                                    <STabPanel>\n                                        <TabContent>\n                                            <Container>\n                                                <Row>\n                                                    {allProducts.map((value, index) => {\n                                                        if (value.startTime != undefined) {\n                                                            debugger\n                                                            return (\n                                                                <>\n                                                                    {moment.unix(value.endTime).format() >= moment().format() && moment.unix(value.startTime).format() <= moment().format() ? (\n                                                                        <CustomCol lg={6}>\n                                                                            <Card\n                                                                                key={index + 'live'}\n                                                                                lg={12}\n                                                                                onClick={() => {\n                                                                                    if (isConnected) {\n                                                                                        setPreSaleViewToken(value.token)\n                                                                                    } else {\n                                                                                        toast.error('Please connect to wallet')\n                                                                                    }\n                                                                                }}>\n                                                                                <Content>\n                                                                                    <Label> Sale Title :</Label> {value.saleTitle ? ethers.utils.parseBytes32String(value.saleTitle) : '-'}\n                                                                                </Content>\n                                                                                <Content>\n                                                                                    <Label> Creator :</Label> {value.address ? value.address : '-'}\n                                                                                </Content>\n                                                                                <Content>\n                                                                                    <Label> Token :</Label> {value.token ? value.token : '-'}\n                                                                                </Content>\n                                                                            </Card>\n                                                                        </CustomCol>\n                                                                    ) : (\n                                                                        ''\n                                                                    )}\n                                                                </>\n                                                            )\n                                                        }\n                                                    })}\n                                                    {live.length == 0 ? <NotFoundText>No Live Projects Found</NotFoundText> : ''}\n                                                </Row>\n                                            </Container>\n                                        </TabContent>\n                                    </STabPanel>\n                                )}\n                                {activeTab == 3 && (\n                                    <STabPanel>\n                                        <TabContent>\n                                            <Container>\n                                                {completed.length > 0 && (\n                                                    <StatusBar>\n                                                        <StatusSuccess\n                                                            active={status == 'success'}\n                                                            onClick={() => {\n                                                                setStatus('success')\n                                                            }}>\n                                                            Success\n                                                        </StatusSuccess>{' '}\n                                                        <StatusFaild\n                                                            active={status == 'faild'}\n                                                            onClick={() => {\n                                                                setStatus('faild')\n                                                            }}>\n                                                            Faild\n                                                        </StatusFaild>\n                                                    </StatusBar>\n                                                )}\n                                                <Row>\n                                                    {allProducts.map((value, index) => {\n                                                        if (value.startTime != undefined) {\n                                                            return (\n                                                                <>\n                                                                    {moment.unix(value.endTime).format() <= moment().format() ? (\n                                                                        <CustomCol lg={6}>\n                                                                            <Card\n                                                                                key={index + 'Completed'}\n                                                                                lg={12}\n                                                                                onClick={() => {\n                                                                                    if (isConnected) {\n                                                                                        setPreSaleViewToken(value.token)\n                                                                                    } else {\n                                                                                        toast.error('Please connect to wallet')\n                                                                                    }\n                                                                                }}>\n                                                                                <Content>\n                                                                                    <Label> Sale Title :</Label> {value.saleTitle ? ethers.utils.parseBytes32String(value.saleTitle) : '-'}\n                                                                                </Content>\n                                                                                <Content>\n                                                                                    <Label> Creator :</Label> {value.address ? value.address : '-'}\n                                                                                </Content>\n                                                                                <Content>\n                                                                                    <Label> Token :</Label> {value.token ? value.token : '-'}\n                                                                                </Content>\n                                                                            </Card>\n                                                                        </CustomCol>\n                                                                    ) : (\n                                                                        ''\n                                                                    )}\n                                                                </>\n                                                            )\n                                                        }\n                                                    })}\n                                                    {completed.length == 0 ? <NotFoundText>No Completed Projects Found</NotFoundText> : ''}\n                                                </Row>\n                                            </Container>\n                                        </TabContent>\n                                    </STabPanel>\n                                )}\n                            </STabs>\n                        </Row>\n\n                        <Spacer />\n                    </Wrapper>\n                </>\n            ) : (\n                <PreSaleDetail preSaleViewToken={preSaleViewToken} />\n            )}\n        </>\n    )\n}\n\nconst Wrapper = styled(Container)`\n    padding-top: 8rem;\n`\nconst Column = styled(Col)`\n    box-sizing: border-box;\n`\n\nconst CustomCol = styled(Column)`\n    margin-bottom: 1rem;\n    cursor: pointer;\n`\nconst Flex = styled(Column)`\n    display: flex;\n    align-items: center;\n`\nconst FilterContent = styled(Flex)`\n    justify-content: center;\n`\n\nconst Heading = styled.h1`\n    text-align: center;\n`\nconst Spacer = styled.div`\n    height: 1rem;\n`\nconst Card = styled.div`\n    padding: 1rem;\n    box-sizing: border-box;\n    width: 100%;\n    box-shadow: 0 0 1px rgb(0 0 0 / 17%), 0 4px 8px rgb(0 0 0 / 8%), 0 8px 12px rgb(0 0 0 / 0%), 0 12px 16px rgb(0 0 0 / 2%);\n    cursor: pointer;\n`\nconst Button = styled.a`\n    width: 10rem;\n    text-align: center;\n    padding: 0.8rem;\n    background: #00bcd4;\n    background: ${({active, disabled}) => (active ? '#07bc0c' : disabled ? '#b9b6b6' : '#00bcd4')};\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    text-decoration: none;\n    cursor: ${({disabled}) => (disabled ? 'no-drop' : 'pointer')};\n    &:hover {\n        background: ${({active, disabled}) => (active ? '#06b30b' : disabled ? '#b9b6b6' : '#00bcd4')};\n    }\n`\nconst NewButton = styled(Button)`\n    display: block;\n    width: auto !important;\n    margin: 0rem 0rem;\n`\n\nconst Content = styled.span`\n    display: flex;\n    font-size: 1rem;\n    &:not(:last-child) {\n        margin-bottom: 1rem;\n    }\n`\n\nconst Label = styled.span`\n    font-size: 1rem;\n    font-weight: bold;\n    width: 6rem;\n    display: block;\n`\n\nconst Cover = styled.img`\n    width: 100%;\n    object-fit: fill;\n`\n\nconst Media = styled.div`\n    position: relative;\n`\n\nconst STabs = styled(Tab)`\n    font-size: 1.2rem;\n    width: 100%;\n    color: black;\n    list-style: none;\n    // cursor: pointer;\n`\n\nconst STabList = styled(TabList)`\n    list-style-type: none;\n    padding: 0.3rem;\n    display: flex;\n    margin: 0;\n    border-bottom: 1px solid #eee;\n`\nSTabList.tabsRole = 'TabList'\n\nconst STab = styled(Tab)`\n    letter-spacing: 2px;\n    width:10rem;\n    margin-bottom: -5px;\n    margin-left: -3px;\n    text-align: center;\n    padding: 0.3rem 0rem 1rem 0rem;\n    user-select: none;\n    cursor: arrow;\n    border-bottom: ${({active}) => (active ? `0.2rem solid #00bcd4 !important` : ``)};\n    font-weight ${({active}) => (active ? `bold` : ``)};\n`\nSTab.tabsRole = 'Tab'\n\nconst STabPanel = styled.div`\n    min-height: 40vh;\n`\n\nconst TabContent = styled.div`\n    min-height: 40vh;\n    padding: 1rem;\n`\n\nSTabPanel.tabsRole = 'TabPanel'\n\nconst StatusBar = styled(Row)`\n    justify-content: center;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n`\nconst StatusButton = styled.button`\n    width: 7rem;\n    border-radius: 3rem;\n    padding: 0.5rem 1rem;\n    color: white;\n    font-size: 1rem;\n    border: 0;\n    cursor: pointer;\n`\nconst StatusSuccess = styled(StatusButton)`\n    margin-right: 1rem;\n    background: ${({active}) => (active ? `#07bc0c` : `#b9b6b6`)};\n`\nconst StatusFaild = styled(StatusButton)`\n    background: ${({active}) => (active ? `#d80a0a` : `#b9b6b6`)};\n`\nconst NotFoundText = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    color: gray;\n    justify-content: center;\n`\nexport default Product\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {Container, Row, Col} from 'styled-bootstrap-grid'\nimport {useSelector} from 'react-redux'\n\nconst Admin = () => {\n    const investmentInfoRead = useSelector((state) => state.auth.investmentInfoRead)\n    const [devFeePercentage, setDevFeePercentage] = useState()\n    const [devFeeInWei, setDevFeeInWie] = useState()\n    const [presaleCount, setPreSaleCount] = useState()\n    const [preSaleAddress, setPreSaleAddress] = useState()\n    const [adminOwner, setAdminOwner] = useState()\n\n    const setDevFeeInPercent = async () => {}\n\n    const logGet = async () => {\n        if (!investmentInfoRead) {\n            alert('you are trying to connect to a null contract')\n        }\n\n        //const investmentFactoryRead = new ethers.Contract(investmentFactory.id, investmentFactory.abi, provider)\n        //  InvetmentInfo mostly Related to Admin work which includes\n        // Developer fee percentage\n        // number of Preslsale made\n        // setting minimum developer fee in wie ==> setMinDevFeeInWei\n        // get a presale address against an id\n        //Presale ContractFactory Owner or Admin\n        //const investmentInfoRead = new ethers.Contract( InvestementInfo.id,InvestementInfo.abi, signer)\n        setDevFeeInWie(await investmentInfoRead.getMinDevFeeInWei())\n        setDevFeePercentage(await investmentInfoRead.getDevFeePercentage())\n        setPreSaleCount(await investmentInfoRead.getPresalesCount())\n        setPreSaleAddress(await investmentInfoRead.getPresaleAddress('0'))\n        setAdminOwner(await investmentInfoRead.owner())\n        console.log('Developer fee in percentage==>', devFeePercentage?.toString(), 'developer Fee in Wei =>', devFeeInWei.toString(), 'PreslaeCount', presaleCount.toString(), 'Presale adddress for id 0 ==>', preSaleAddress, 'Admin is ==>', adminOwner)\n\n        //  This Part Deals with Admin Panle writn to the contract which includes admin ownership transfer\n        // settting developer fee in wie or its percentage\n        //const setMinDevFeeInWei = await InvetmentInfoRead.setMinDevFeeInWei(\"500000000\")  // Setting Developer Fee in Wei\n        //await setMinDevFeeInWei.wait()\n        //const setDevFeeInPercent = await InvetmentInfoRead.setDevFeePercntage('3')   // Percentage e.g 1 , 2 ,3\n        //await setDevFeeInPercent.wait();\n        //const addPresaleAddress = await InvetmentInfoRead.addPresaleAddress(\"\") // address 0x0234er43454322354\n        //await addPresaleAddress.wait();\n        //const transferOwnership = await InvetmentInfoRead.transferOwnership(\"\") // adddress of the new owner\n    }\n\n    return (\n        <Wrapper>\n            <Row>\n                <Column>\n                    <Heading>Admin</Heading>\n                </Column>\n            </Row>\n\n            <Row>\n                <Column lg={6}>\n                    Developer Fee Percentage: <Content>{devFeePercentage?.toString()}</Content>\n                </Column>\n                <Column lg={6}>\n                    Developer Fee in Wei: <Content>{devFeeInWei?.toString()}</Content>\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>\n                    PreSale Count: <Content> {presaleCount?.toString()}</Content>\n                </Column>\n                <Column lg={6}>\n                    PreSale Address: <Content>{preSaleAddress?.toString()}</Content>\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>\n                    LaunchPad Owner: <Content>{adminOwner?.toString()}</Content>\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>Set Developer Fee</Column>\n                <Column lg={6}>\n                    <InputText />\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>Set Developer Inwei</Column>\n                <Column lg={6}>\n                    <InputText />\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>Set Developer Fee in Percentage</Column>\n                <Column lg={6}>\n                    <InputText />\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>Add PreSale</Column>\n                <Column lg={6}>\n                    <InputText />\n                </Column>\n            </Row>\n            <Spacer />\n            <Row>\n                <Column lg={6}>Transfer Ownership</Column>\n                <Column lg={6}>\n                    <InputText />\n                </Column>\n            </Row>\n            <Spacer />\n            <Spacer />\n            <Row>\n                <ButtonContent lg={12}>\n                    <Button onClick={logGet}>Save</Button>\n                </ButtonContent>\n            </Row>\n            <Spacer />\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled(Container)`\n    padding-top: 8rem;\n`\nconst Column = styled(Col)`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n`\nconst Flex = styled(Column)`\n    display: flex;\n    align-items: center;\n`\nconst ButtonContent = styled(Flex)`\n    justify-content: center;\n`\n\nconst Logo = styled.img`\n    width: 8rem;\n    height: 8rem;\n    border-radius: 5rem;\n    border: 1px solid #eee;\n`\nconst Heading = styled.h1`\n    text-align: center;\n`\nconst Spacer = styled.div`\n    height: 1rem;\n`\n\nconst InputText = styled.input`\n    // outline:none;\n    width: 100%;\n    font-size: 1.1rem;\n    padding: 0.4rem;\n    border: 0.09rem solid #e3e2e2;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n`\nconst Button = styled.a`\n    width: 10rem;\n    text-align: center;\n    padding: 0.8rem;\n    background: #00bcd4;\n    color: white;\n    border-radius: 0.4rem;\n    border: none;\n    font-size: 1rem;\n    margin: 0rem 0.5rem;\n    text-decoration: none;\n    &:hover {\n        background: #05b5cc;\n    }\n`\n\nconst Label = styled(Column)`\n    display: flex;\n    align-items: center;\n`\nconst Icon = styled.img`\n    margin-right: 1rem;\n    width: 2.5rem;\n`\n\nconst Text = styled.p``\nconst Content = styled.p`\n    margin-left: 2rem;\n`\n\nexport default Admin\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Footer = () => {\n    return (\n        <Box>\n            <Flex>\n                <Logo src=\"/images/logo.png\" />\n            </Flex>\n\n            <Wrapper>\n                <Row>\n                    <Column>\n                        <Heading>About Us</Heading>\n                        <FooterLink href=\"#\">Crypto</FooterLink>\n                        <FooterLink href=\"#\">CryptoCurrency</FooterLink>\n                        <FooterLink href=\"#\">BlockChain</FooterLink>\n                        <FooterLink href=\"#\"></FooterLink>\n                    </Column>\n                    <Column>\n                        <Heading>Services</Heading>\n                        <FooterLink href=\"#\">LaunchPad</FooterLink>\n                        <FooterLink href=\"#\">Liquidity Locker</FooterLink>\n                        <FooterLink href=\"#\">Token Mint</FooterLink>\n                        <FooterLink href=\"#\">NFT Market Place</FooterLink>\n                        <FooterLink href=\"#\">Swap</FooterLink>\n                        <FooterLink href=\"#\">P2E Games</FooterLink>\n                    </Column>\n                    <Column>\n                        <Heading>Contact Us</Heading>\n                        <FooterLink href=\"#\">launchpad@gmail.com</FooterLink>\n                        <FooterLink href=\"#\">042-5555-555-55</FooterLink>\n                        <FooterLink href=\"#\">xyz street </FooterLink>\n                    </Column>\n                    <Column>\n                        <Heading>Social Media</Heading>\n                        <FooterLink href=\"#\">\n                            <i className=\"fab fa-facebook-f\">\n                                <span style={{marginLeft: '10px'}}>Facebook</span>\n                            </i>\n                        </FooterLink>\n                        <FooterLink href=\"#\">\n                            <i className=\"fab fa-instagram\">\n                                <span style={{marginLeft: '10px'}}>Instagram</span>\n                            </i>\n                        </FooterLink>\n                        <FooterLink href=\"#\">\n                            <i className=\"fab fa-twitter\">\n                                <span style={{marginLeft: '10px'}}>Twitter</span>\n                            </i>\n                        </FooterLink>\n                        <FooterLink href=\"#\">\n                            <i className=\"fab fa-youtube\">\n                                <span style={{marginLeft: '10px'}}>Youtube</span>\n                            </i>\n                        </FooterLink>\n                    </Column>\n                </Row>\n            </Wrapper>\n        </Box>\n    )\n}\nconst Flex = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 0.5rem;\n`\nconst Box = styled.div`\n    padding: 80px 60px;\n    background: #eee;\n    //   position: absolute;\n    bottom: 0;\n    // width: 100%;\n\n    @media (max-width: 1000px) {\n        padding: 70px 30px;\n    }\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    max-width: 1000px;\n    margin: 0 auto;\n    /* background: red; */\n`\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    margin-left: 60px;\n`\n\nconst Row = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n    grid-gap: 20px;\n\n    @media (max-width: 1000px) {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    }\n`\n\nconst FooterLink = styled.a`\n    color: black;\n    margin-bottom: 20px;\n    font-size: 18px;\n    text-decoration: none;\n\n    &:hover {\n        color: #333;\n        transition: 200ms ease-in;\n    }\n`\n\nconst Heading = styled.p`\n    font-size: 24px;\n    color: black;\n    margin-bottom: 40px;\n    font-weight: bold;\n`\n\nconst Logo = styled.img`\n    width: 14rem;\n    padding: 0rem;\n`\nexport default Footer\n","import './App.css'\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport LaunchPad from './pages/LaunchPad'\nimport PreSaleDetail from './pages/PreSaleDetail'\nimport Product from './pages/Product'\nimport Admin from './pages/Admin'\nimport Footer from './components/Footer'\nimport {Route, Routes} from 'react-router-dom'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nfunction App() {\n    return (\n        <>\n            <Header />\n            <Routes>\n                <Route path=\"/\" element={<Home />}></Route>\n                <Route path=\"/createLaunchPad\" element={<LaunchPad />}></Route>\n                <Route path=\"/viewLaunchPad\" element={<PreSaleDetail />}></Route>\n                <Route path=\"/viewAllLaunchPad\" element={<Product />}></Route>\n                <Route path=\"/admin\" element={<Admin />}></Route>\n            </Routes>\n            <Footer />\n            <ToastContainer position=\"top-center\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\n        </>\n    )\n}\n\nexport default App\n","import * as types from '../actions/types'\n\nconst initialState = {\n    isConnected: false,\n    shouldConnect: false,\n    user: null,\n    address: null,\n    chainError: false,\n    launchPadContract: null,\n    investmentInfoRead: null,\n    signer: null,\n    preSaleTokenAddress:null\n}\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.TRIGGER_CONNECT:\n            return {\n                ...state,\n                shouldConnect: true\n            }\n        case types.CONNECTED_SUCCESS:\n            return {\n                ...state,\n                ...action.value,\n                shouldConnect: false,\n                address: action.value.address\n            }\n        case types.DISCONNECTED_SUCCESS:\n            return {\n                ...initialState\n            }\n            case types.SAVE_TOKEN_ADDRESS:\n            return {\n                ...state,\n                preSaleTokenAddress:action.value\n            }\n            \n\n        default:\n            return state\n    }\n}\n","import {combineReducers} from 'redux'\nimport auth from './authReducer'\n\nexport default combineReducers({\n    auth\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\n\nimport {createStore} from 'redux'\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}